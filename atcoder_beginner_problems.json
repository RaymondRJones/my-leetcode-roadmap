{
  "metadata": {
    "created_at": "2025-08-09T14:13:52.991930",
    "total_problems": 50,
    "source": "AtCoder ABC Problems",
    "target_audience": "Complete Beginners",
    "focus": "Basic programming concepts (if-statements, loops, simple logic)"
  },
  "problems": [
    {
      "url": "https://atcoder.jp/contests/abc415/tasks/abc415_a",
      "contest": "ABC 415",
      "title": "Unsupported Type",
      "problem_statement": "配点 :\n100\n点\n問題文\n長さ\nN\nの整数列\nA=(A_1,A_2,\\dots,A_N)\nと整数\nX\nが与えられます。\nX\nが\nA\nに含まれるか判定してください。\n制約\n入力は全て整数\n1 \\le N \\le 100\n1 \\le A_i \\le 100\n1 \\le X \\le 100\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nA_1\nA_2\n\\dots\nA_N\nX\n出力\nX\nが\nA\nに含まれるなら\nYes\n、含まれないなら\nNo\nと出力せよ。\n入力例 1\n5\r\n3 1 4 1 5\r\n4\n出力例 1\nYes\nA=(3,1,4,1,5), X=4\nであり、\nX\nは\nA\nに含まれます。\n入力例 2\n4\r\n100 100 100 100\r\n100\n出力例 2\nYes\nX\nが複数回\nA\nに含まれる場合もあります。\n入力例 3\n6\r\n2 3 5 7 11 13\r\n1\n出力例 3\nNo\nScore :\n100\npoints\nProblem Statement\nYou are given an integer sequence\nA=(A_1,A_2,\\dots,A_N)\nof length\nN\nand an integer\nX\n.\nDetermine whether\nX\nis contained in\nA\n.\nConstraints\nAll input values are integers.\n1 \\le N \\le 100\n1 \\le A_i \\le 100\n1 \\le X \\le 100\nInput\nThe input is given from Standard Input in the following format:\nN\nA_1\nA_2\n\\dots\nA_N\nX\nOutput\nIf\nX\nis contained in\nA\n, print\nYes\n; otherwise, print\nNo\n.\nSample Input 1\n5\r\n3 1 4 1 5\r\n4\nSample Output 1\nYes\nWe have\nA=(3,1,4,1,5)\nand\nX=4\n;\nX\nis contained in\nA\n.\nSample Input 2\n4\r\n100 100 100 100\r\n100\nSample Output 2\nYes\nX\nmay be contained in\nA\nmultiple times.\nSample Input 3\n6\r\n2 3 5 7 11 13\r\n1\nSample Output 3\nNo",
      "constraints": "No constraints specified",
      "input_format": "1 \\le N \\le 100\n1 \\le A_i \\le 100\n1 \\le X \\le 100",
      "output_format": "IfXis contained inA, printYes; otherwise, printNo.",
      "sample_cases": [
        {
          "input": "5\r\n3 1 4 1 5\r\n4",
          "output": "Yes"
        },
        {
          "input": "4\r\n100 100 100 100\r\n100",
          "output": "Yes"
        },
        {
          "input": "6\r\n2 3 5 7 11 13\r\n1",
          "output": "No"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have a list of numbers and a single number. You need to check if the single number is in the list. If it is, you say 'Yes', and if it isn't, you say 'No'.",
        "key_concepts": [
          "if-statements",
          "lists (arrays)",
          "input/output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:10:54.462022"
    },
    {
      "url": "https://atcoder.jp/contests/abc414/tasks/abc414_a",
      "contest": "ABC 414",
      "title": "Streamer Takahashi",
      "problem_statement": "配点 :\n100\n点\n問題文\n配信者の高橋君は\nL\n時から\nR\n時に配信をすることにしました。\n高橋君には\nN\n人のリスナーがおり、\ni\n人目のリスナーは\nX_i\n時から\nY_i\n時まで配信を見ることができます。\n高橋君の配信を最初から最後まで見ることができるリスナーは何人いますか？\n制約\n1\\leq N\\leq 100\n0\\leq L\\lt R\\leq 23\n0\\leq X_i\\lt Y_i\\leq 23\n入力は全て整数\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nL\nR\nX_1\nY_1\nX_2\nY_2\n\\vdots\nX_N\nY_N\n出力\n高橋君の配信を最初から最後まで見ることができるリスナーの数を出力せよ。\n入力例 1\n5 19 22\r\n17 23\r\n20 23\r\n19 22\r\n0 23\r\n12 20\n出力例 1\n3\n高橋君の配信を最初から最後まで見ることができるのは\n1,3,4\n人目のリスナーです。\n入力例 2\n3 12 13\r\n0 1\r\n0 1\r\n0 1\n出力例 2\n0\n高橋君の配信を最初から最後まで見ることができるリスナーはいません。\n入力例 3\n10 8 14\r\n5 20\r\n14 21\r\n9 21\r\n5 23\r\n8 10\r\n0 14\r\n3 8\r\n2 6\r\n0 16\r\n5 20\n出力例 3\n5\nScore :\n100\npoints\nProblem Statement\nStreamer Takahashi has decided to stream from\nL\no'clock to\nR\no'clock (using the\n24\n-hour clock).\nHe has\nN\nlisteners, and the\ni\n-th listener can watch the stream from\nX_i\no'clock to\nY_i\no'clock.\nHow many listeners can watch Takahashi's stream from beginning to end?\nConstraints\n1\\leq N\\leq 100\n0\\leq L\\lt R\\leq 23\n0\\leq X_i\\lt Y_i\\leq 23\nAll input values are integers.\nInput\nThe input is given from Standard Input in the following format:\nN\nL\nR\nX_1\nY_1\nX_2\nY_2\n\\vdots\nX_N\nY_N\nOutput\nOutput the number of listeners who can watch Takahashi's stream from beginning to end.\nSample Input 1\n5 19 22\r\n17 23\r\n20 23\r\n19 22\r\n0 23\r\n12 20\nSample Output 1\n3\nThe listeners who can watch Takahashi's stream from beginning to end are the\n1\nst,\n3\nrd, and\n4\nth listeners.\nSample Input 2\n3 12 13\r\n0 1\r\n0 1\r\n0 1\nSample Output 2\n0\nNo listeners can watch Takahashi's stream from beginning to end.\nSample Input 3\n10 8 14\r\n5 20\r\n14 21\r\n9 21\r\n5 23\r\n8 10\r\n0 14\r\n3 8\r\n2 6\r\n0 16\r\n5 20\nSample Output 3\n5",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "Output format not specified",
      "sample_cases": [
        {
          "input": "5 19 22\r\n17 23\r\n20 23\r\n19 22\r\n0 23\r\n12 20",
          "output": "3"
        },
        {
          "input": "3 12 13\r\n0 1\r\n0 1\r\n0 1",
          "output": "0"
        },
        {
          "input": "10 8 14\r\n5 20\r\n14 21\r\n9 21\r\n5 23\r\n8 10\r\n0 14\r\n3 8\r\n2 6\r\n0 16\r\n5 20",
          "output": "5"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "Takahashi is streaming from one hour to another. You need to find out how many of his listeners can watch the whole stream without missing any part of it.",
        "key_concepts": [
          "if-statements",
          "loops",
          "basic math",
          "input/output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:10:57.660063"
    },
    {
      "url": "https://atcoder.jp/contests/abc413/tasks/abc413_a",
      "contest": "ABC 413",
      "title": "Content Too Large",
      "problem_statement": "配点 :\n100\n点\n問題文\n高橋くんは、\nN\n個の品物と\n1\nつのカバンを持っています。\ni\n番目\n(1\\le i\\le N)\nの品物の大きさは\nA _ i\nで、カバンの大きさは\nM\nです。\nカバンに入れようとしている品物の大きさの合計が\nM\n以下のとき、かつそのときに限り、それらの品物をすべて同時にカバンに入れることができます。\n高橋くんが\nN\n個の品物すべてを同時にカバンに入れることができるなら\nYes\n、そうでなければ\nNo\nと出力してください。\n制約\n1\\le N\\le100\n1\\le M\\le10000\n1\\le A _ i\\le100\\ (1\\le i\\le N)\n入力はすべて整数\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nM\nA _ 1\nA _ 2\n\\ldots\nA _ N\n出力\n高橋くんがすべての品物を同時にカバンに入れられるなら\nYes\nを、そうでなければ\nNo\nを出力せよ。\n入力例 1\n5 15\r\n3 1 4 1 5\n出力例 1\nYes\n5\nつの品物の大きさの合計は\n3+1+4+1+5=14\nです。\r\nこれは、カバンの大きさ\n15\n以下なので、高橋くんはすべての品物を同時にカバンに入れることができます。\r\nなので、\nYes\nを出力してください。\n入力例 2\n5 5\r\n3 1 4 1 5\n出力例 2\nNo\n5\nつの品物の大きさの合計は\n14\nで、カバンの大きさ\n5\nより大きいため、高橋くんはすべての品物を同時にカバンに入れることができません。\r\nなので、\nNo\nを出力してください。\n入力例 3\n1 10000\r\n100\n出力例 3\nYes\nScore :\n100\npoints\nProblem Statement\nTakahashi has\nN\nitems and one bag.\nThe size of the\ni\n-th\n(1\\le i\\le N)\nitem is\nA_i\n, and the size of the bag is\nM\n.\nIf and only if the total size of the items he is trying to put in the bag is at most\nM\n, he can put all those items in the bag simultaneously.\nIf he can put all\nN\nitems in the bag simultaneously, print\nYes\n; otherwise, print\nNo\n.\nConstraints\n1\\le N\\le100\n1\\le M\\le10000\n1\\le A_i\\le100\\ (1\\le i\\le N)\nAll input values are integers.\nInput\nThe input is given from standard input in the following format:\nN\nM\nA_1\nA_2\n\\ldots\nA_N\nOutput\nIf Takahashi can put all items in the bag simultaneously, print\nYes\n; otherwise, print\nNo\n.\nSample Input 1\n5 15\r\n3 1 4 1 5\nSample Output 1\nYes\nThe total size of the\n5\nitems is\n3+1+4+1+5=14\n.\r\nSince this is not greater than the bag size\n15\n, Takahashi can put all items in the bag simultaneously.\r\nThus, print\nYes\n.\nSample Input 2\n5 5\r\n3 1 4 1 5\nSample Output 2\nNo\nThe total size of the\n5\nitems is\n14\n, which is greater than the bag size\n5\n, so he cannot put all items in the bag simultaneously.\r\nThus, print\nNo\n.\nSample Input 3\n1 10000\r\n100\nSample Output 3\nYes",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "If Takahashi can put all items in the bag simultaneously, printYes; otherwise, printNo.",
      "sample_cases": [
        {
          "input": "5 15\r\n3 1 4 1 5",
          "output": "Yes"
        },
        {
          "input": "5 5\r\n3 1 4 1 5",
          "output": "No"
        },
        {
          "input": "1 10000\r\n100",
          "output": "Yes"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "Takahashi has a bag and several items. He wants to know if he can fit all the items in the bag without exceeding its size limit. If the total size of the items is less than or equal to the bag's size, he can fit them all; otherwise, he cannot.",
        "key_concepts": [
          "if-statements",
          "basic math (addition)",
          "input and output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:01.837302"
    },
    {
      "url": "https://atcoder.jp/contests/abc412/tasks/abc412_a",
      "contest": "ABC 412",
      "title": "Task Failed Successfully",
      "problem_statement": "配点 :\n100\n点\n問題文\n高橋君は\nN\n日間のタスク目標を設定しました。\n高橋君は\ni (1 \\leq i \\leq N)\n日目に\nA_i\n個のタスクを完了することを目標としており、実際には\nB_i\n個のタスクを完了しました。\n高橋君が目標より多くのタスクを完了した日数を求めてください。\n制約\n1 \\leq N \\leq 100\n1 \\leq A_i, B_i \\leq 100\n入力される値はすべて整数\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nA_1\nB_1\nA_2\nB_2\n\\vdots\nA_N\nB_N\n出力\n答えを出力せよ。\n入力例 1\n4\r\n2 8\r\n5 5\r\n5 4\r\n6 7\n出力例 1\n2\n高橋君は\n1\n日目と\n4\n日目に目標より多くのタスクを完了しました。\n入力例 2\n5\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\n出力例 2\n0\n入力例 3\n6\r\n1 6\r\n2 5\r\n3 4\r\n4 3\r\n5 2\r\n6 1\n出力例 3\n3\nScore :\n100\npoints\nProblem Statement\nTakahashi set task goals for\nN\ndays.\nHe aimed to complete\nA_i\ntasks on day\ni (1 \\leq i \\leq N)\n, and actually completed\nB_i\ntasks.\nFind the number of days when he completed more tasks than his goal.\nConstraints\n1 \\leq N \\leq 100\n1 \\leq A_i, B_i \\leq 100\nAll input values are integers.\nInput\nThe input is given from Standard Input in the following format:\nN\nA_1\nB_1\nA_2\nB_2\n\\vdots\nA_N\nB_N\nOutput\nOutput the answer.\nSample Input 1\n4\r\n2 8\r\n5 5\r\n5 4\r\n6 7\nSample Output 1\n2\nTakahashi completed more tasks than his goal on the\n1\nst and\n4\nth days.\nSample Input 2\n5\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1\nSample Output 2\n0\nSample Input 3\n6\r\n1 6\r\n2 5\r\n3 4\r\n4 3\r\n5 2\r\n6 1\nSample Output 3\n3",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "Output format not specified",
      "sample_cases": [
        {
          "input": "4\r\n2 8\r\n5 5\r\n5 4\r\n6 7",
          "output": "2"
        },
        {
          "input": "5\r\n1 1\r\n1 1\r\n1 1\r\n1 1\r\n1 1",
          "output": "0"
        },
        {
          "input": "6\r\n1 6\r\n2 5\r\n3 4\r\n4 3\r\n5 2\r\n6 1",
          "output": "3"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You need to count how many days Takahashi did more tasks than he planned. For each day, compare the number of tasks he actually completed with his goal and keep track of the days he succeeded.",
        "key_concepts": [
          "if-statements",
          "loops",
          "basic math",
          "input/output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:04.732544"
    },
    {
      "url": "https://atcoder.jp/contests/abc411/tasks/abc411_a",
      "contest": "ABC 411",
      "title": "Required Length",
      "problem_statement": "配点 :\n100\n点\n問題文\n高橋君は、ある web サイトに設定するパスワードを、英小文字のみからなる文字列\nP\nにしようと考えています。\n一方で、その web サイトのパスワードは長さ\nL\n以上の文字列である必要があります。\nP\nが長さの条件をみたすか、すなわち長さ\nL\n以上の文字列であるか判定してください。\n制約\nP\nは英小文字のみからなる長さ\n1\n以上\n100\n以下の文字列\n1 \\leq L \\leq 100\nL\nは整数\n入力\n入力は以下の形式で標準入力から与えられる。\nP\nL\n出力\nP\nが長さの条件をみたすならば\nYes\nを、そうでないならば\nNo\nを出力せよ。\n入力例 1\nchokudai\n5\n出力例 1\nYes\nchokudai\nの長さは\n8\nであり、特に\n5\n以上であるため長さの条件をみたしています。\nよって、\nYes\nを出力します。\n入力例 2\nac\n3\n出力例 2\nNo\nac\nの長さは\n2\nであり、特に\n3\n未満であるため長さの条件をみたしていません。\nよって、\nNo\nを出力します。\n入力例 3\natcoder\n7\n出力例 3\nYes\natcoder\nの長さは\n7\nであり、特に\n7\n以上であるため長さの条件をみたしています。\nよって、\nYes\nを出力します。\nScore :\n100\npoints\nProblem Statement\nTakahashi wants to set his password for a certain website to a string\nP\nconsisting of lowercase English letters.\nThe password for that website must be a string of length at least\nL\n.\nDetermine whether\nP\nsatisfies the length condition, that is, whether it is a string of length at least\nL\n.\nConstraints\nP\nis a string consisting of lowercase English letters with length between\n1\nand\n100\n, inclusive.\n1 \\leq L \\leq 100\nL\nis an integer.\nInput\nThe input is given from Standard Input in the following format:\nP\nL\nOutput\nIf\nP\nsatisfies the length condition, print\nYes\n; otherwise, print\nNo\n.\nSample Input 1\nchokudai\n5\nSample Output 1\nYes\nThe length of\nchokudai\nis\n8\n, which is at least\n5\n, so it satisfies the length condition.\nThus, print\nYes\n.\nSample Input 2\nac\n3\nSample Output 2\nNo\nThe length of\nac\nis\n2\n, which is less than\n3\n, so it does not satisfy the length condition.\nThus, print\nNo\n.\nSample Input 3\natcoder\n7\nSample Output 3\nYes\nThe length of\natcoder\nis\n7\n, which is at least\n7\n, so it satisfies the length condition.\nThus, print\nYes\n.",
      "constraints": "Pis a string consisting of lowercase English letters with length between1and100, inclusive.1 \\leq L \\leq 100Lis an integer.",
      "input_format": "Input format not specified",
      "output_format": "IfPsatisfies the length condition, printYes; otherwise, printNo.",
      "sample_cases": [
        {
          "input": "chokudai\n5",
          "output": "Yes"
        },
        {
          "input": "ac\n3",
          "output": "No"
        },
        {
          "input": "atcoder\n7",
          "output": "Yes"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You need to check if a password made of lowercase letters is long enough. The password must be at least a certain number of characters long. If it is long enough, you say 'Yes'; if not, you say 'No'.",
        "key_concepts": [
          "if-statements",
          "string length",
          "input and output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:07.988662"
    },
    {
      "url": "https://atcoder.jp/contests/abc410/tasks/abc410_a",
      "contest": "ABC 410",
      "title": "入力例 1",
      "problem_statement": "配点 :\n100\n点\n問題文\nAtCoder 国では馬のレースが\nN\n個開催されています。\ni\n個目のレースには\nA_i\n歳以下の馬が出場できます。\nN\n個のレースのうち、\nK\n歳の馬が出場できるレースの個数はいくつですか？\n制約\n入力は全て整数\n1 \\le N \\le 100\n1 \\le A_i \\le 100\n1 \\le K \\le 100\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nA_1\nA_2\n\\dots\nA_N\nK\n出力\n答えを整数として出力せよ。\n入力例 1\n5\r\n3 1 4 1 5\r\n4\n出力例 1\n2\n1\n個目のレースには\n3\n歳以下の馬が出場できます。\n2\n個目のレースには\n1\n歳以下の馬が出場できます。\n3\n個目のレースには\n4\n歳以下の馬が出場できます。\n4\n個目のレースには\n1\n歳以下の馬が出場できます。\n5\n個目のレースには\n5\n歳以下の馬が出場できます。\n5\n個のレースのうち、\n4\n歳の馬が出場できるものは\n3,5\n個目の\n2\nつです。\n入力例 2\n1\r\n1\r\n100\n出力例 2\n0\nK\n歳の馬が出場できるレースがひとつもない場合もあります。\n入力例 3\n15\r\n18 89 31 2 15 93 64 78 58 19 79 59 24 50 30\r\n38\n出力例 3\n8\nScore :\n100\npoints\nProblem Statement\nIn AtCoder Kingdom, there are\nN\nhorse races being held.\nHorses aged\nA_i\nor younger can participate in the\ni\n-th race.\nAmong the\nN\nraces, how many races can a\nK\n-year-old horse participate in?\nConstraints\nAll input values are integers.\n1 \\le N \\le 100\n1 \\le A_i \\le 100\n1 \\le K \\le 100\nInput\nThe input is given from Standard Input in the following format:\nN\nA_1\nA_2\n\\dots\nA_N\nK\nOutput\nOutput the answer as an integer.\nSample Input 1\n5\r\n3 1 4 1 5\r\n4\nSample Output 1\n2\nHorses aged\n3\nor younger can participate in the\n1\nst race.\nHorses aged\n1\nor younger can participate in the\n2\nnd race.\nHorses aged\n4\nor younger can participate in the\n3\nrd race.\nHorses aged\n1\nor younger can participate in the\n4\nth race.\nHorses aged\n5\nor younger can participate in the\n5\nth race.\nAmong the\n5\nraces, a\n4\n-year-old horse can participate in the\n3\nrd and\n5\nth races, which is\n2\nraces.\nSample Input 2\n1\r\n1\r\n100\nSample Output 2\n0\nThere may be no races that a\nK\n-year-old horse can participate in.\nSample Input 3\n15\r\n18 89 31 2 15 93 64 78 58 19 79 59 24 50 30\r\n38\nSample Output 3\n8",
      "constraints": "No constraints specified",
      "input_format": "1 \\le N \\le 100\n1 \\le A_i \\le 100\n1 \\le K \\le 100",
      "output_format": "Output format not specified",
      "sample_cases": [
        {
          "input": "5\r\n3 1 4 1 5\r\n4",
          "output": "2"
        },
        {
          "input": "1\r\n1\r\n100",
          "output": "0"
        },
        {
          "input": "15\r\n18 89 31 2 15 93 64 78 58 19 79 59 24 50 30\r\n38",
          "output": "8"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have a number of horse races, and each race allows horses of a certain age or younger to compete. You need to find out how many races a horse of a specific age can enter.",
        "key_concepts": [
          "lists",
          "loops",
          "conditional statements",
          "input/output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:12.241157"
    },
    {
      "url": "https://atcoder.jp/contests/abc409/tasks/abc409_a",
      "contest": "ABC 409",
      "title": "Conflict",
      "problem_statement": "配点 :\n100\n点\n問題文\nN\n個の商品があります。高橋君と青木君がどの商品を欲しがっているかを表す長さ\nN\nの文字列\nT,A\nが与えられます。\nT,A\nの\ni\\ (1\\leq i\\leq N)\n文字目をそれぞれ\nT_i,A_i\nとします。\n高橋君は\nT_i\nが\no\nのとき\ni\n番目の商品を欲しがっており、\nT_i\nが\nx\nのとき\ni\n番目の商品を欲しがっていません。\r\n同様に、青木君は\nA_i\nが\no\nのとき\ni\n番目の商品を欲しがっており、\nA_i\nが\nx\nのとき\ni\n番目の商品を欲しがっていません。\n2\n人ともが欲しがっている商品が存在するか判定してください。\n制約\n1\\leq N\\leq 100\nN\nは整数\nT,A\nは\no\nおよび\nx\nからなる長さ\nN\nの文字列\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nT\nA\n出力\n2\n人とも欲しがっている商品が存在するならば\nYes\nを、存在しないならば\nNo\nを出力せよ。\n入力例 1\n4\r\noxoo\r\nxoox\n出力例 1\nYes\n3\nつ目の商品は\n2\n人ともが欲しがっているため、\nYes\nを出力します。\n入力例 2\n5\r\nxxxxx\r\nooooo\n出力例 2\nNo\n2\n人とも欲しがっている商品は存在しないため、\nNo\nを出力します。\n入力例 3\n10\r\nxoooxoxxxo\r\nooxooooxoo\n出力例 3\nYes\nScore :\n100\npoints\nProblem Statement\nThere are\nN\nitems. You are given strings\nT\nand\nA\nof length\nN\nthat represent which items Takahashi and Aoki want, respectively. Let\nT_i\nand\nA_i\nbe the\ni\n-th\n(1\\leq i\\leq N)\ncharacters of\nT\nand\nA\n, respectively.\nTakahashi wants the\ni\n-th item when\nT_i\nis\no\n, and does not want the\ni\n-th item when\nT_i\nis\nx\n.\r\nSimilarly, Aoki wants the\ni\n-th item when\nA_i\nis\no\n, and does not want the\ni\n-th item when\nA_i\nis\nx\n.\nDetermine whether there exists an item that both of them want.\nConstraints\n1\\leq N\\leq 100\nN\nis an integer.\nT\nand\nA\nare strings of length\nN\nconsisting of\no\nand\nx\n.\nInput\nThe input is given from Standard Input in the following format:\nN\nT\nA\nOutput\nIf there exists an item that both of them want, output\nYes\n; otherwise, output\nNo\n.\nSample Input 1\n4\r\noxoo\r\nxoox\nSample Output 1\nYes\nThe third item is wanted by both of them, so output\nYes\n.\nSample Input 2\n5\r\nxxxxx\r\nooooo\nSample Output 2\nNo\nThere is no item that both of them want, so output\nNo\n.\nSample Input 3\n10\r\nxoooxoxxxo\r\nooxooooxoo\nSample Output 3\nYes",
      "constraints": "1\\leq N\\leq 100Nis an integer.TandAare strings of lengthNconsisting ofoandx.",
      "input_format": "Input format not specified",
      "output_format": "Output format not specified",
      "sample_cases": [
        {
          "input": "4\r\noxoo\r\nxoox",
          "output": "Yes"
        },
        {
          "input": "5\r\nxxxxx\r\nooooo",
          "output": "No"
        },
        {
          "input": "10\r\nxoooxoxxxo\r\nooxooooxoo",
          "output": "Yes"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have a list of items and two friends, Takahashi and Aoki, who each want some of those items. The task is to check if there is at least one item that both friends want.",
        "key_concepts": [
          "if-statements",
          "loops",
          "string manipulation",
          "conditional checks"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:15.179865"
    },
    {
      "url": "https://atcoder.jp/contests/abc408/tasks/abc408_a",
      "contest": "ABC 408",
      "title": "Timeout",
      "problem_statement": "配点 :\n150\n点\n問題文\n高橋村の長老はすぐに寝てしまいます。具体的には、最後に肩を叩かれてから\nS+0.5\n秒以上経過すると長老は寝てしまいます。\n現在、長老は起きており、付き人がちょうど長老の肩を叩きました。\nこれから付き人はちょうど\nN\n回長老の肩を叩きます。\ni\n回目の肩叩きは現在から\nT_i\n秒後に行われます。\n長老が現在から\nT_N\n秒後まで連続して起きているかを判定してください。\n制約\n1 \\leq N \\leq 100\n1 \\leq S \\leq 100\n1 \\leq T_i \\leq 1000\n(\n1 \\leq i \\leq N\n)\nT_i < T_{i+1}\n(\n1 \\leq i \\leq N-1\n)\n入力はすべて整数\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nS\nT_1\nT_2\n\\ldots\nT_N\n出力\n長老が現在から\nT_N\n秒後まで連続して起きているならば\nYes\nを、そうでないならば\nNo\nを出力せよ。\n入力例 1\n5 10\n6 11 21 22 30\n出力例 1\nYes\n付き人は時系列順に以下のように肩を叩きます。\n6\n秒後に肩を叩きます。このとき、長老は最後に肩を叩かれてから\n6\n秒しか経過していないので起きています。\n11\n秒後に肩を叩きます。このとき、長老は最後に肩を叩かれてから\n5\n秒しか経過していないので起きています。\n21\n秒後に肩を叩きます。このとき、長老は最後に肩を叩かれてから\n10\n秒しか経過していないので起きています。\n22\n秒後に肩を叩きます。このとき、長老は最後に肩を叩かれてから\n1\n秒しか経過していないので起きています。\n30\n秒後に肩を叩きます。このとき、長老は最後に肩を叩かれてから\n8\n秒しか経過していないので起きています。\n現在から\n30\n秒後まで長老は起きているので、\nYes\nと出力します。\n入力例 2\n2 100\n1 200\n出力例 2\nNo\n長老は現在から\n101.5\n秒後に寝てしまいます。そのため\nNo\nと出力します。\n入力例 3\n10 22\n47 81 82 95 117 146 165 209 212 215\n出力例 3\nNo\nScore :\n150\npoints\nProblem Statement\nThe elder of Takahashi Village falls asleep immediately. Specifically, if\nS+0.5\nseconds or more have passed since the elder was last tapped on the shoulder, the elder falls asleep.\nCurrently, the elder is awake, and an attendant has just tapped the elder on the shoulder.\nFrom now on, the attendant will tap the elder's shoulder exactly\nN\ntimes. The\ni\n-th shoulder tap will be performed\nT_i\nseconds from now.\nDetermine whether the elder remains awake continuously from now until\nT_N\nseconds later.\nConstraints\n1 \\leq N \\leq 100\n1 \\leq S \\leq 100\n1 \\leq T_i \\leq 1000\n(\n1 \\leq i \\leq N\n)\nT_i < T_{i+1}\n(\n1 \\leq i \\leq N-1\n)\nAll input values are integers.\nInput\nThe input is given from Standard Input in the following format:\nN\nS\nT_1\nT_2\n\\ldots\nT_N\nOutput\nIf the elder remains awake continuously from now until\nT_N\nseconds later, output\nYes\n; otherwise, output\nNo\n.\nSample Input 1\n5 10\n6 11 21 22 30\nSample Output 1\nYes\nThe attendant taps the shoulder in chronological order as follows:\nTaps after\n6\nseconds. At this time, only\n6\nseconds have passed since the elder was last tapped on the shoulder, so the elder is awake.\nTaps after\n11\nseconds. At this time, only\n5\nseconds have passed since the elder was last tapped on the shoulder, so the elder is awake.\nTaps after\n21\nseconds. At this time, only\n10\nseconds have passed since the elder was last tapped on the shoulder, so the elder is awake.\nTaps after\n22\nseconds. At this time, only\n1\nsecond has passed since the elder was last tapped on the shoulder, so the elder is awake.\nTaps after\n30\nseconds. At this time, only\n8\nseconds have passed since the elder was last tapped on the shoulder, so the elder is awake.\nSince the elder is awake from now until\n30\nseconds later, output\nYes\n.\nSample Input 2\n2 100\n1 200\nSample Output 2\nNo\nThe elder falls asleep\n101.5\nseconds from now. Therefore, output\nNo\n.\nSample Input 3\n10 22\n47 81 82 95 117 146 165 209 212 215\nSample Output 3\nNo",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "Output format not specified",
      "sample_cases": [
        {
          "input": "5 10\n6 11 21 22 30",
          "output": "Yes"
        },
        {
          "input": "2 100\n1 200",
          "output": "No"
        },
        {
          "input": "10 22\n47 81 82 95 117 146 165 209 212 215",
          "output": "No"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You need to check if the elder of Takahashi Village stays awake after being tapped on the shoulder a certain number of times. If the time between taps exceeds a specific limit, he will fall asleep. Your task is to find out if he stays awake until the last tap.",
        "key_concepts": [
          "if-statements",
          "loops",
          "basic math",
          "input/output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:18.615011"
    },
    {
      "url": "https://atcoder.jp/contests/abc407/tasks/abc407_a",
      "contest": "ABC 407",
      "title": "Approximation",
      "problem_statement": "配点 :\n150\n点\n問題文\n正整数\nA\nと正の奇数\nB\nが与えられます。\n実数\n\\dfrac AB\nとの差が最小となる整数を出力してください。\nただし、制約のもとでそのような整数がただ一つ存在することが証明できます。\n制約\n1\\leq A\\leq407\n1\\leq B\\leq407\nB\nは奇数\n入力はすべて整数\n入力\n入力は以下の形式で標準入力から与えられる。\nA\nB\n出力\n\\dfrac AB\nとの差が最小となる整数を出力せよ。\n入力例 1\n4 7\n出力例 1\n1\n\\dfrac AB=\\dfrac47=0.5714\\ldots\nです。\n\\dfrac AB\nと\n1\nとの差は\n\\dfrac37=0.4285\\ldots\nで、これより差が小さい整数はありません。\nよって、\n1\nを出力してください。\n入力例 2\n407 29\n出力例 2\n14\n\\dfrac AB=\\dfrac{407}{29}=14.0344\\ldots\nです。\n\\dfrac AB\nと\n14\nとの差は\n\\dfrac1{29}=0.0344\\ldots\nで、これより差が小さい整数はありません。\nよって、\n14\nを出力してください。\n入力例 3\n22 11\n出力例 3\n2\n\\dfrac AB\nが整数である場合もあります。\nScore :\n150\npoints\nProblem Statement\nYou are given a positive integer\nA\nand a positive odd integer\nB\n.\nOutput the integer whose difference from the real number\n\\dfrac AB\nis the smallest.\nIt can be proved that, under the constraints, such an integer is unique.\nConstraints\n1 \\le A \\le 407\n1 \\le B \\le 407\nB\nis odd.\nAll input values are integers.\nInput\nThe input is given from Standard Input in the following format:\nA\nB\nOutput\nOutput the integer that minimizes the difference from\n\\dfrac AB\n.\nSample Input 1\n4 7\nSample Output 1\n1\nWe have\n\\dfrac AB = \\dfrac47 = 0.5714\\ldots\n.\r\nThe difference between\n\\dfrac AB\nand\n1\nis\n\\dfrac37 = 0.4285\\ldots\n, and no integer has a smaller difference.\nThus, print\n1\n.\nSample Input 2\n407 29\nSample Output 2\n14\nWe have\n\\dfrac AB = \\dfrac{407}{29} = 14.0344\\ldots\n.\r\nThe difference between\n\\dfrac AB\nand\n14\nis\n\\dfrac1{29} = 0.0344\\ldots\n, and no integer has a smaller difference.\nThus, print\n14\n.\nSample Input 3\n22 11\nSample Output 3\n2\n\\dfrac AB\nmay itself be an integer.",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "Output format not specified",
      "sample_cases": [
        {
          "input": "4 7",
          "output": "1"
        },
        {
          "input": "407 29",
          "output": "14"
        },
        {
          "input": "22 11",
          "output": "2"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You are given two numbers: a positive number A and a positive odd number B. Your task is to find the whole number that is closest to the value of A divided by B.",
        "key_concepts": [
          "basic math",
          "finding the closest integer",
          "input and output handling"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:21.568327"
    },
    {
      "url": "https://atcoder.jp/contests/abc406/tasks/abc406_a",
      "contest": "ABC 406",
      "title": "Not Acceptable",
      "problem_statement": "配点 :\n100\n点\n問題文\n高橋君は\n2025\n年\n5\n月\n17\n日\nA\n時\nB\n分締切のレポートを、\n2025\n年\n5\n月\n17\n日\nC\n時\nD\n分に提出しました。\nここで、「\nA\n時\nB\n分」と「\nC\n時\nD\n分」は異なる時刻であることが保証されます。\n高橋君が締切前にレポートを提出しているならば\nYes\nを、そうでないならば\nNo\nを出力してください。\n制約\n0 \\leq A,C \\leq 23\n0 \\leq B,D \\leq 59\n(A,B)\\neq(C,D)\nA,B,C,D\nは整数\n入力\n入力は以下の形式で標準入力から与えられる。\nA\nB\nC\nD\n出力\n高橋君が締切前にレポートを提出しているならば\nYes\nを、そうでないならば\nNo\nを出力せよ。\n入力例 1\n22 40 22 30\n出力例 1\nYes\nレポートの締切は\n22\n時\n40\n分であり、高橋君は\n22\n時\n30\n分に提出しているため、締切前にレポートを提出しています。\nよって、\nYes\nを出力します。\n入力例 2\n22 40 22 45\n出力例 2\nNo\nレポートの締切は\n22\n時\n40\n分であり、高橋君は\n22\n時\n45\n分に提出しているため、締切後にレポートを提出しています。\nよって、\nNo\nを出力します。\n入力例 3\n12 0 11 30\n出力例 3\nYes\nScore :\n100\npoints\nProblem Statement\nTakahashi had a report whose deadline was\nB\nminutes past\nA\no'clock on May 17, 2025. He submitted it at\nD\nminutes past\nC\no'clock on May 17, 2025.\nIt is guaranteed that \"\nB\nminutes past\nA\no'clock\" and \"\nD\nminutes past\nC\no'clock\" are different times.\nOutput\nYes\nif Takahashi submitted the report before the deadline, and\nNo\notherwise.\nConstraints\n0 \\leq A, C \\leq 23\n0 \\leq B, D \\leq 59\n(A, B) \\neq (C, D)\nA\n,\nB\n,\nC\n, and\nD\nare integers.\nInput\nThe input is given from Standard Input in the following format:\nA\nB\nC\nD\nOutput\nIf Takahashi submitted the report before the deadline, output\nYes\n; otherwise, output\nNo\n.\nSample Input 1\n22 40 22 30\nSample Output 1\nYes\nThe deadline is 22:40, and he submitted at 22:30, so he submitted before the deadline.\r\nHence, output\nYes\n.\nSample Input 2\n22 40 22 45\nSample Output 2\nNo\nThe deadline is 22:40, and he submitted at 22:45, so he submitted after the deadline.\r\nHence, output\nNo\n.\nSample Input 3\n12 0 11 30\nSample Output 3\nYes",
      "constraints": "0 \\leq A, C \\leq 230 \\leq B, D \\leq 59(A, B) \\neq (C, D)A,B,C, andDare integers.",
      "input_format": "Input format not specified",
      "output_format": "Output format not specified",
      "sample_cases": [
        {
          "input": "22 40 22 30",
          "output": "Yes"
        },
        {
          "input": "22 40 22 45",
          "output": "No"
        },
        {
          "input": "12 0 11 30",
          "output": "Yes"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You need to check if a student submitted their report before a deadline. If the submission time is earlier than the deadline, you should say 'Yes'; otherwise, say 'No'.",
        "key_concepts": [
          "if-statements",
          "comparison",
          "basic input/output",
          "integer handling"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:25.375619"
    },
    {
      "url": "https://atcoder.jp/contests/abc405/tasks/abc405_a",
      "contest": "ABC 405",
      "title": "Is it rated?",
      "problem_statement": "配点 :\n100\n点\n問題文\n現在 AtCoder で開催されている AtCoder Regular Contest (ARC) には、Div.\n1\nと Div.\n2\nの\n2\n種類が存在します。\r\nARC Div.\n1\nでは\nレーティング\nが\n1600\n以上\n2999\n以下の人が、ARC Div.\n2\nではレーティングが\n1200\n以上\n2399\n以下の人がそれぞれ\nRated 対象\nとなります。\n正整数\nR, X\nが与えられます。\nレーティングが\nR\nの人は ARC Div.\nX\nにおいて Rated 対象ですか？\n制約\n1\\leq R \\leq 4229\n1\\leq X \\leq 2\n入力は全て整数\n入力\n入力は以下の形式で標準入力から与えられる。\nR\nX\n出力\nレーティングが\nR\nの人が ARC Div.\nX\nにおいて Rated 対象ならば\nYes\nを、そうでないならば\nNo\nを出力せよ。\n入力例 1\n2000 1\n出力例 1\nYes\n2000\nは\n1600\n以上\n2999\n以下であるため、レーティングが\n2000\nの人は ARC Div.\n1\nにおいて Rated 対象です。\n入力例 2\n1000 1\n出力例 2\nNo\n1000\nは\n1600\n未満であるため、レーティングが\n1000\nの人は ARC Div.\n1\nにおいて Rated 対象ではありません。\n入力例 3\n1500 2\n出力例 3\nYes\n1500\nは\n1200\n以上\n2399\n以下であるため、レーティングが\n1500\nの人は ARC Div.\n2\nにおいて Rated 対象です。\n入力例 4\n2800 2\n出力例 4\nNo\n2800\nは\n2399\nより大きいため、レーティングが\n2800\nの人は ARC Div.\n2\nにおいて Rated 対象ではありません。\nScore :\n100\npoints\nProblem Statement\nAtCoder Regular Contest (ARC) currently has two divisions: Div.\n1\nand Div.\n2\n.\r\nIn ARC Div.\n1\n, participants whose\nrating\nis between\n1600\nand\n2999\n, inclusive, are\nrated\n.\r\nIn ARC Div.\n2\n, participants whose rating is between\n1200\nand\n2399\n, inclusive, are rated.\nYou are given positive integers\nR\nand\nX\n.\nDetermine whether a person with rating\nR\nis rated in ARC Div.\nX\n.\nConstraints\n1 \\le R \\le 4229\n1 \\le X \\le 2\nAll input values are integers.\nInput\nThe input is given from Standard Input in the following format:\nR\nX\nOutput\nIf a person with rating\nR\nis rated in ARC Div.\nX\n, output\nYes\n; otherwise, output\nNo\n.\nSample Input 1\n2000 1\nSample Output 1\nYes\nBecause\n2000\nlies between\n1600\nand\n2999\n, a person with rating\n2000\nis rated in ARC Div.\n1\n.\nSample Input 2\n1000 1\nSample Output 2\nNo\nBecause\n1000\nis less than\n1600\n, a person with rating\n1000\nis not rated in ARC Div.\n1\n.\nSample Input 3\n1500 2\nSample Output 3\nYes\nBecause\n1500\nlies between\n1200\nand\n2399\n, a person with rating\n1500\nis rated in ARC Div.\n2\n.\nSample Input 4\n2800 2\nSample Output 4\nNo\nBecause\n2800\nexceeds\n2399\n, a person with rating\n2800\nis not rated in ARC Div.\n2\n.",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "Output format not specified",
      "sample_cases": [
        {
          "input": "2000 1",
          "output": "Yes"
        },
        {
          "input": "1000 1",
          "output": "No"
        },
        {
          "input": "1500 2",
          "output": "Yes"
        },
        {
          "input": "2800 2",
          "output": "No"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You need to check if a person's rating allows them to participate in a specific division of a contest. If their rating falls within the allowed range for that division, you will answer 'Yes'; otherwise, you will answer 'No'.",
        "key_concepts": [
          "if-statements",
          "comparison operators",
          "input/output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:29.704570"
    },
    {
      "url": "https://atcoder.jp/contests/abc404/tasks/abc404_a",
      "contest": "ABC 404",
      "title": "Not Found",
      "problem_statement": "配点 :\n100\n点\n問題文\n英小文字からなる長さ\n1\n以上\n25\n以下の文字列\nS\nが与えられます。\nS\nに含まれない英小文字をひとつ出力してください。\n但し、そのようなものが複数ある場合はどれを出力しても構いません。\n制約\nS\nは英小文字からなる長さ\n1\n以上\n25\n以下の文字列\n入力\n入力は以下の形式で標準入力から与えられる。\nS\n出力\nS\nに含まれない英小文字をひとつ出力せよ。そのようなものが複数ある場合はどれを出力しても構わない。\n入力例 1\na\n出力例 1\nd\nS=\na\nです。\na\n以外の英小文字、\nb\n,\nc\n, ...,\nz\nが正解となります。\n入力例 2\nabcdfhijklmnopqrstuvwxyz\n出力例 2\ne\nS\n中に含まれない英小文字は\ne\nと\ng\nです。\n入力例 3\nqazplwsxokmedcijnrfvuhbgt\n出力例 3\ny\nScore :\n100\npoints\nProblem Statement\nYou are given a string\nS\nof length between\n1\nand\n25\nconsisting of lowercase English letters.\nOutput one lowercase English letter that does not appear in\nS\n.\nIf there are multiple such letters, you may output any one of them.\nConstraints\nS\nis a string of length between\n1\nand\n25\n(inclusive) consisting of lowercase English letters.\nInput\nThe input is given from Standard Input in the following format:\nS\nOutput\nOutput one lowercase English letter that does not appear in\nS\n. If there are multiple such letters, you may output any one of them.\nSample Input 1\na\nSample Output 1\nd\nS=\na\n.\nAny lowercase English letter other than\na\n(that is,\nb\n,\nc\n, …, or\nz\n) is a correct answer.\nSample Input 2\nabcdfhijklmnopqrstuvwxyz\nSample Output 2\ne\nThe lowercase English letters not included in\nS\nare\ne\nand\ng\n.\nSample Input 3\nqazplwsxokmedcijnrfvuhbgt\nSample Output 3\ny",
      "constraints": "Sis a string of length between1and25(inclusive) consisting of lowercase English letters.",
      "input_format": "Input format not specified",
      "output_format": "Output format not specified",
      "sample_cases": [
        {
          "input": "a",
          "output": "d"
        },
        {
          "input": "abcdfhijklmnopqrstuvwxyz",
          "output": "e"
        },
        {
          "input": "qazplwsxokmedcijnrfvuhbgt",
          "output": "y"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You are given a string of lowercase letters. Your task is to find and print one letter that is not in the string.",
        "key_concepts": [
          "string manipulation",
          "loops",
          "conditional statements",
          "basic input/output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:32.439810"
    },
    {
      "url": "https://atcoder.jp/contests/abc403/tasks/abc403_a",
      "contest": "ABC 403",
      "title": "Odd Position Sum",
      "problem_statement": "配点 :\n100\n点\n問題文\n長さ\nN\nの正整数列\nA=(A_1,A_2,\\dots,A_N)\nが与えられます。\nA\nの奇数番目の要素の総和を求めてください。すなわち、\nN\n以下の最大の奇数を\nm\nとしたとき\nA_1+A_3+A_5+\\ldots+A_m\nを求めてください。\n制約\n1\\leq N\\leq 100\n1\\leq A_i\\leq 100\n入力は全て整数\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nA_1\nA_2\n\\ldots\nA_N\n出力\n答えを出力せよ。\n入力例 1\n7\r\n3 1 4 1 5 9 2\n出力例 1\n14\nA\nの奇数番目の要素の総和は\nA_1+A_3+A_5+A_7=3+4+5+2=14\nです。\n入力例 2\n1\r\n100\n出力例 2\n100\n入力例 3\n14\r\n100 10 1 10 100 10 1 10 100 10 1 10 100 10\n出力例 3\n403\nScore :\n100\npoints\nProblem Statement\nYou are given a sequence of positive integers of length\nN\n:\nA=(A_1,A_2,\\dots,A_N)\n.\nFind the sum of the odd-indexed elements of\nA\n. That is, find\nA_1 + A_3 + A_5 + \\dots + A_m\n, where\nm\nis the largest odd number not exceeding\nN\n.\nConstraints\n1 \\le N \\le 100\n1 \\le A_i \\le 100\nAll input values are integers.\nInput\nThe input is given from Standard Input in the following format:\nN\nA_1\nA_2\n\\dots\nA_N\nOutput\nPrint the answer.\nSample Input 1\n7\r\n3 1 4 1 5 9 2\nSample Output 1\n14\nThe sum of the odd-indexed elements of\nA\nis\nA_1+A_3+A_5+A_7=3+4+5+2=14\n.\nSample Input 2\n1\r\n100\nSample Output 2\n100\nSample Input 3\n14\r\n100 10 1 10 100 10 1 10 100 10 1 10 100 10\nSample Output 3\n403",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "Print the answer.",
      "sample_cases": [
        {
          "input": "7\r\n3 1 4 1 5 9 2",
          "output": "14"
        },
        {
          "input": "1\r\n100",
          "output": "100"
        },
        {
          "input": "14\r\n100 10 1 10 100 10 1 10 100 10 1 10 100 10",
          "output": "403"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have a list of numbers, and you need to add up the numbers that are in the odd positions, like the 1st, 3rd, 5th, etc. The task is to find the total of these numbers.",
        "key_concepts": [
          "lists",
          "loops",
          "basic math",
          "input/output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:35.855300"
    },
    {
      "url": "https://atcoder.jp/contests/abc402/tasks/abc402_a",
      "contest": "ABC 402",
      "title": "CBC",
      "problem_statement": "配点 :\n100\n点\n問題文\n英大文字と英小文字からなる文字列\nS\nが与えられます。\nS\nの英大文字のみを元の順序で連結して得られる文字列を出力してください。\n制約\nS\nは英大文字と英小文字からなる文字列である\nS\nの長さは\n1\n以上\n100\n以下である\n入力\n入力は以下の形式で標準入力から与えられる。\nS\n出力\nS\nの英大文字のみを元の順序で連結して得られる文字列を出力せよ。\n入力例 1\nAtCoderBeginnerContest\n出力例 1\nACBC\nS\nの英大文字のみを元の順序で連結して得られる文字列は\nACBC\nです。よって、\nACBC\nを出力します。\n入力例 2\nPaymentRequired\n出力例 2\nPR\n入力例 3\nprogram\n出力例 3\nS\nに英大文字が含まれないことがあることに注意してください。\nScore :\n100\npoints\nProblem Statement\nYou are given a string\nS\nconsisting of uppercase and lowercase English letters. Print the string obtained by concatenating only the uppercase letters of\nS\nin their original order.\nConstraints\nS\nis a string of uppercase and lowercase English letters.\nThe length of\nS\nis between\n1\nand\n100\n, inclusive.\nInput\nThe input is given from Standard Input in the following format:\nS\nOutput\nPrint the string obtained by concatenating only the uppercase letters of\nS\nin their original order.\nSample Input 1\nAtCoderBeginnerContest\nSample Output 1\nACBC\nThe string obtained by concatenating only the uppercase letters of\nS\nin their original order is\nACBC\n. Hence, print\nACBC\n.\nSample Input 2\nPaymentRequired\nSample Output 2\nPR\nSample Input 3\nprogram\nSample Output 3\nNote that\nS\nmay contain no uppercase letters.",
      "constraints": "Sis a string of uppercase and lowercase English letters.The length ofSis between1and100, inclusive.",
      "input_format": "Input format not specified",
      "output_format": "Print the string obtained by concatenating only the uppercase letters ofSin their original order.",
      "sample_cases": [
        {
          "input": "AtCoderBeginnerContest",
          "output": "ACBC"
        },
        {
          "input": "PaymentRequired",
          "output": "PR"
        },
        {
          "input": "program",
          "output": ""
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You need to take a string that contains both uppercase and lowercase letters and create a new string with only the uppercase letters in the same order. For example, from 'HelloWorld', you would get 'HW'.",
        "key_concepts": [
          "strings",
          "loops",
          "conditionals (if-statements)",
          "output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:39.375086"
    },
    {
      "url": "https://atcoder.jp/contests/abc401/tasks/abc401_a",
      "contest": "ABC 401",
      "title": "Status Code",
      "problem_statement": "配点 :\n100\n点\n問題文\n100\n以上\n999\n以下の整数\nS\nが与えられます。\nS\nが\n200\n以上\n299\n以下のとき\nSuccess\n、そうでないとき\nFailure\nと出力してください。\n制約\n100\\leq S\\leq999\nS\nは整数\n入力\n入力は以下の形式で標準入力から与えられる。\nS\n出力\n答えを出力せよ。\n入力例 1\n200\n出力例 1\nSuccess\n200\nは\n200\n以上\n299\n以下なので、\nSuccess\nと出力してください。\n入力例 2\n401\n出力例 2\nFailure\n401\nは\n200\n以上\n299\n以下ではないので、\nFailure\nと出力してください。\n入力例 3\n999\n出力例 3\nFailure\nScore :\n100\npoints\nProblem Statement\nYou are given an integer\nS\nbetween\n100\nand\n999\n(inclusive).\nIf\nS\nis between\n200\nand\n299\n(inclusive), print\nSuccess\n; otherwise, print\nFailure\n.\nConstraints\n100 \\le S \\le 999\nS\nis an integer.\nInput\nThe input is given from Standard Input in the following format:\nS\nOutput\nPrint the answer.\nSample Input 1\n200\nSample Output 1\nSuccess\n200\nis between\n200\nand\n299\n, so print\nSuccess\n.\nSample Input 2\n401\nSample Output 2\nFailure\n401\nis not between\n200\nand\n299\n, so print\nFailure\n.\nSample Input 3\n999\nSample Output 3\nFailure",
      "constraints": "100 \\le S \\le 999Sis an integer.",
      "input_format": "Input format not specified",
      "output_format": "Print the answer.",
      "sample_cases": [
        {
          "input": "200",
          "output": "Success"
        },
        {
          "input": "401",
          "output": "Failure"
        },
        {
          "input": "999",
          "output": "Failure"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You will receive a number between 100 and 999. If this number is between 200 and 299, you should print 'Success'. If it is not, you should print 'Failure'.",
        "key_concepts": [
          "if-statements",
          "basic input/output",
          "number comparison"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:42.580089"
    },
    {
      "url": "https://atcoder.jp/contests/abc400/tasks/abc400_a",
      "contest": "ABC 400",
      "title": "ABC400 Party",
      "problem_statement": "配点 :\n100\n点\n問題文\nABC400 を記念した式典において、\n400\n人の高橋君を\nA\n行\nB\n列の長方形状に隙間なく並べようとしています。\n正整数\nA\nが与えられるので、このような並べ方ができるような正整数\nB\nの値を出力してください。ただし、そのような正整数\nB\nが存在しない場合には\n-1\nを出力してください。\n制約\nA\nは\n1\n以上\n400\n以下の整数\n入力\n入力は以下の形式で標準入力から与えられる。\nA\n出力\n問題文の指示に従って\nB\nの値あるいは\n-1\nを出力せよ。\n入力例 1\n10\n出力例 1\n40\n400\n人の高橋君を\n10\n行\n40\n列の長方形状に並べることができます。\n入力例 2\n11\n出力例 2\n-1\n入力例 3\n400\n出力例 3\n1\nScore :\n100\npoints\nProblem Statement\nIn the ceremony commemorating ABC400, we want to arrange\n400\npeople in a rectangular formation of\nA\nrows and\nB\ncolumns without any gaps.\nYou are given a positive integer\nA\n. Print the value of a positive integer\nB\nfor which such an arrangement is possible. If there is no such positive integer\nB\n, print\n-1\n.\nConstraints\nA\nis an integer between\n1\nand\n400\n, inclusive.\nInput\nThe input is given from Standard Input in the following format:\nA\nOutput\nPrint the value of\nB\nor\n-1\nas specified by the problem statement.\nSample Input 1\n10\nSample Output 1\n40\nWe can arrange\n400\npeople in\n10\nrows and\n40\ncolumns.\nSample Input 2\n11\nSample Output 2\n-1\nSample Input 3\n400\nSample Output 3\n1",
      "constraints": "Ais an integer between1and400, inclusive.",
      "input_format": "Input format not specified",
      "output_format": "Print the value ofBor-1as specified by the problem statement.",
      "sample_cases": [
        {
          "input": "10",
          "output": "40"
        },
        {
          "input": "11",
          "output": "-1"
        },
        {
          "input": "400",
          "output": "1"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You need to arrange 400 people in a rectangle with a given number of rows (A). Your task is to find out how many columns (B) you can have if each row must be full. If it's not possible to arrange them this way, you should return -1.",
        "key_concepts": [
          "basic math",
          "if-statements",
          "input/output",
          "division"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:45.599444"
    },
    {
      "url": "https://atcoder.jp/contests/abc399/tasks/abc399_a",
      "contest": "ABC 399",
      "title": "Hamming Distance",
      "problem_statement": "配点 :\n100\n点\n問題文\n正整数\nN\nおよび、英小文字からなる長さ\nN\nの文字列\nS,T\nが与えられます。\nS\nと\nT\nのハミング距離を求めてください。\r\nすなわち、\n1\n以上\nN\n以下の整数\ni\nであって、\nS\nの\ni\n文字目と\nT\nの\ni\n文字目が異なるようなものの個数を求めてください。\n制約\n1\\leq N \\leq 100\nN\nは整数\nS,T\nはそれぞれ英小文字からなる長さ\nN\nの文字列\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nS\nT\n出力\n答えを出力せよ。\n入力例 1\n6\r\nabcarc\r\nagcahc\n出力例 1\n2\nS\nと\nT\nは\n2,5\n文字目が異なり、それ以外が等しいです。よって答えは\n2\nです。\n入力例 2\n7\r\natcoder\r\ncontest\n出力例 2\n7\n入力例 3\n8\r\nchokudai\r\nchokudai\n出力例 3\n0\n入力例 4\n10\r\nvexknuampx\r\nvzxikuamlx\n出力例 4\n4\nScore :\n100\npoints\nProblem Statement\nYou are given a positive integer\nN\nand two strings\nS\nand\nT\n, each of length\nN\nand consisting of lowercase English letters.\nFind the Hamming distance between\nS\nand\nT\n. That is, find the number of integers\ni\nsuch that\n1 \\leq i \\leq N\nand the\ni\n-th character of\nS\nis different from the\ni\n-th character of\nT\n.\nConstraints\n1\\leq N \\leq 100\nN\nis an integer.\nEach of\nS\nand\nT\nis a string of length\nN\nconsisting of lowercase English letters.\nInput\nThe input is given from Standard Input in the following format:\nN\nS\nT\nOutput\nPrint the answer.\nSample Input 1\n6\r\nabcarc\r\nagcahc\nSample Output 1\n2\nS\nand\nT\ndiffer in the 2nd and 5th characters, but not in other characters. Thus, the answer is\n2\n.\nSample Input 2\n7\r\natcoder\r\ncontest\nSample Output 2\n7\nSample Input 3\n8\r\nchokudai\r\nchokudai\nSample Output 3\n0\nSample Input 4\n10\r\nvexknuampx\r\nvzxikuamlx\nSample Output 4\n4",
      "constraints": "1\\leq N \\leq 100Nis an integer.Each ofSandTis a string of lengthNconsisting of lowercase English letters.",
      "input_format": "Input format not specified",
      "output_format": "Print the answer.",
      "sample_cases": [
        {
          "input": "6\r\nabcarc\r\nagcahc",
          "output": "2"
        },
        {
          "input": "7\r\natcoder\r\ncontest",
          "output": "7"
        },
        {
          "input": "8\r\nchokudai\r\nchokudai",
          "output": "0"
        },
        {
          "input": "10\r\nvexknuampx\r\nvzxikuamlx",
          "output": "4"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have two strings of the same length made up of lowercase letters. Your task is to count how many positions in these strings have different letters.",
        "key_concepts": [
          "loops",
          "conditional statements",
          "string manipulation",
          "counting"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:48.723535"
    },
    {
      "url": "https://atcoder.jp/contests/abc398/tasks/abc398_a",
      "contest": "ABC 398",
      "title": "Doors in the Center",
      "problem_statement": "配点 :\n100\n点\n問題文\n以下の条件を全て満たす長さ\nN\nの文字列を求めてください。\n各文字は\n-\nまたは\n=\nである\n回文である\n文字列中に\n=\nは\n1\n個または\n2\n個含まれる。\n2\n個含まれる場合、それらの\n=\nは隣接している\nなお、そのような文字列はちょうど\n1\nつ存在します。\n制約\n1 \\leq N \\leq 100\nN\nは整数である\n入力\n入力は以下の形式で標準入力から与えられる。\nN\n出力\n答えを出力せよ。\n入力例 1\n4\n出力例 1\n-==-\n入力例 2\n7\n出力例 2\n---=---\nScore :\n100\npoints\nProblem Statement\nFind a length-\nN\nstring that satisfies all of the following conditions:\nEach character is\n-\nor\n=\n.\nIt is a palindrome.\nIt contains exactly one or exactly two\n=\ns. If it contains two\n=\ns, they are adjacent.\nSuch a string is unique.\nConstraints\n1 \\leq N \\leq 100\nN\nis an integer.\nInput\nThe input is given from Standard Input in the following format:\nN\nOutput\nPrint the answer.\nSample Input 1\n4\nSample Output 1\n-==-\nSample Input 2\n7\nSample Output 2\n---=---",
      "constraints": "1 \\leq N \\leq 100Nis an integer.",
      "input_format": "Input format not specified",
      "output_format": "Print the answer.",
      "sample_cases": [
        {
          "input": "4",
          "output": "-==-"
        },
        {
          "input": "7",
          "output": "---=---"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You need to create a string that is a palindrome (it reads the same forwards and backwards) and is made up of the characters '-' and '='. The string must have either one '=' or two adjacent '=' characters, and it has to be a specific length that you will provide.",
        "key_concepts": [
          "strings",
          "palindromes",
          "conditional statements",
          "loops"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:52.264318"
    },
    {
      "url": "https://atcoder.jp/contests/abc397/tasks/abc397_a",
      "contest": "ABC 397",
      "title": "Thermometer",
      "problem_statement": "配点 :\n100\n点\n問題文\n高橋君は自分の体温を計測し、\nX\n{}^\\circ\nC であることがわかりました。\n体温は次の\n3\n種類に分類されます。\n38.0\n{}^\\circ\nC 以上のとき「高熱」\n37.5\n{}^\\circ\nC 以上\n38.0\n{}^\\circ\nC 未満のとき「発熱」\n37.5\n{}^\\circ\nC 未満のとき「平熱」\n高橋君の体温は何に分類されるでしょうか？「出力」の項にしたがって整数で出力してください。\n制約\n30 \\leq X \\leq 50\nX\nは小数第一位まで与えられる\n入力\n入力は以下の形式で標準入力から与えられる。\nX\n出力\n高橋君の体温が何に分類されるかを以下に定められる整数で出力せよ。\n高熱の場合:\n1\n発熱の場合:\n2\n平熱の場合:\n3\n入力例 1\n40.0\n出力例 1\n1\n高橋君の体温は\n40.0\n{}^\\circ\nC であるため、高熱に分類されます。よって、\n1\nを出力します。\n入力例 2\n37.7\n出力例 2\n2\n高橋君の体温は\n37.7\n{}^\\circ\nC であるため、発熱に分類されます。よって、\n2\nを出力します。\n入力例 3\n36.6\n出力例 3\n3\n高橋君の体温は\n36.6\n{}^\\circ\nC であるため、平熱に分類されます。よって、\n3\nを出力します。\nScore :\n100\npoints\nProblem Statement\nTakahashi measured his body temperature and found it to be\nX\n{}^\\circ\nC.\nBody temperature is classified into the following:\nHigher than or equal to\n38.0\n{}^\\circ\nC: “High fever”\nHigher than or equal to\n37.5\n{}^\\circ\nC and lower than\n38.0\n{}^\\circ\nC: “Fever”\nLower than\n37.5\n{}^\\circ\nC: “Normal”\nWhich classification does Takahashi's body temperature fall into? Present the answer as an integer according to the Output section.\nConstraints\n30 \\leq X \\leq 50\nX\nis given to one decimal place.\nInput\nThe input is given from Standard Input in the following format:\nX\nOutput\nPrint an integer specified below corresponding to Takahashi's body temperature classification.\nHigh fever:\n1\nFever:\n2\nNormal:\n3\nSample Input 1\n40.0\nSample Output 1\n1\nHis body temperature is\n40.0\n{}^\\circ\nC, which is classified as a high fever. Thus, print\n1\n.\nSample Input 2\n37.7\nSample Output 2\n2\nHis body temperature is\n37.7\n{}^\\circ\nC, which is classified as a fever. Thus, print\n2\n.\nSample Input 3\n36.6\nSample Output 3\n3\nHis body temperature is\n36.6\n{}^\\circ\nC, which is classified as a normal temperature. Thus, print\n3\n.",
      "constraints": "30 \\leq X \\leq 50Xis given to one decimal place.",
      "input_format": "Input format not specified",
      "output_format": "Output format not specified",
      "sample_cases": [
        {
          "input": "40.0",
          "output": "1"
        },
        {
          "input": "37.7",
          "output": "2"
        },
        {
          "input": "36.6",
          "output": "3"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You need to check a person's body temperature and tell which category it falls into: high fever, fever, or normal. Based on the temperature, you will return a number: 1 for high fever, 2 for fever, and 3 for normal.",
        "key_concepts": [
          "if-statements",
          "comparison operators",
          "input and output",
          "basic math"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:56.404355"
    },
    {
      "url": "https://atcoder.jp/contests/abc396/tasks/abc396_a",
      "contest": "ABC 396",
      "title": "Triple Four",
      "problem_statement": "配点 :\n100\n点\n問題文\n長さ\nN\nの整数列\nA=(A_1,A_2,\\ldots,A_N)\nが与えられます。\nA\nの中に同じ要素が\n3\nつ以上連続する箇所が存在するか判定してください。\nより厳密には、\n1\n以上\nN-2\n以下の整数\ni\nであって\nA_i=A_{i+1}=A_{i+2}\nを満たすものが存在するか判定してください。\n制約\n3\\le N\\le 100\n1\\le A_i\\le 100\n入力される値は全て整数\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nA_1\nA_2\n\\ldots\nA_N\n出力\nA\nの中に同じ要素が\n3\nつ以上連続する箇所が存在するならば\nYes\nを、存在しないならば\nNo\nを出力せよ。\n入力例 1\n5\r\n1 4 4 4 2\n出力例 1\nYes\nA=(1,4,4,4,2)\nです。\n4\nが\n3\nつ連続している箇所が存在するので、\nYes\nを出力してください。\n入力例 2\n6\r\n2 4 4 2 2 4\n出力例 2\nNo\nA=(2,4,4,2,2,4)\nです。同じ要素が\n3\nつ以上連続している箇所は存在しないので、\nNo\nを出力してください。\n入力例 3\n8\r\n1 4 2 5 7 7 7 2\n出力例 3\nYes\n入力例 4\n10\r\n1 2 3 4 5 6 7 8 9 10\n出力例 4\nNo\n入力例 5\n13\r\n1 1 1 1 1 1 1 1 1 1 1 1 1\n出力例 5\nYes\nScore :\n100\npoints\nProblem Statement\nYou are given an integer sequence of length\nN\n:\nA = (A_1,A_2,\\ldots,A_N)\n.\nDetermine whether there is a place in\nA\nwhere the same element appears three or more times in a row.\nMore formally, determine whether there exists an integer\ni\nwith\n1 \\le i \\le N-2\nsuch that\nA_i = A_{i+1} = A_{i+2}\n.\nConstraints\n3 \\le N \\le 100\n1 \\le A_i \\le 100\nAll input values are integers.\nInput\nThe input is given from Standard Input in the following format:\nN\nA_1\nA_2\n\\ldots\nA_N\nOutput\nIf there is a place in\nA\nwhere the same element appears three or more times in a row, print\nYes\n. Otherwise, print\nNo\n.\nSample Input 1\n5\r\n1 4 4 4 2\nSample Output 1\nYes\nWe have\nA=(1,4,4,4,2)\n. There is a place where\n4\nappears three times in a row, so print\nYes\n.\nSample Input 2\n6\r\n2 4 4 2 2 4\nSample Output 2\nNo\nWe have\nA=(2,4,4,2,2,4)\n. There is no place where the same element appears three or more times in a row, so print\nNo\n.\nSample Input 3\n8\r\n1 4 2 5 7 7 7 2\nSample Output 3\nYes\nSample Input 4\n10\r\n1 2 3 4 5 6 7 8 9 10\nSample Output 4\nNo\nSample Input 5\n13\r\n1 1 1 1 1 1 1 1 1 1 1 1 1\nSample Output 5\nYes",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "If there is a place inAwhere the same element appears three or more times in a row, printYes. Otherwise, printNo.",
      "sample_cases": [
        {
          "input": "5\r\n1 4 4 4 2",
          "output": "Yes"
        },
        {
          "input": "6\r\n2 4 4 2 2 4",
          "output": "No"
        },
        {
          "input": "8\r\n1 4 2 5 7 7 7 2",
          "output": "Yes"
        },
        {
          "input": "10\r\n1 2 3 4 5 6 7 8 9 10",
          "output": "No"
        },
        {
          "input": "13\r\n1 1 1 1 1 1 1 1 1 1 1 1 1",
          "output": "Yes"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have a list of numbers, and you need to check if any number appears three times in a row. If you find such a group of numbers, you should say 'Yes', otherwise say 'No'.",
        "key_concepts": [
          "if-statements",
          "loops",
          "arrays/lists",
          "input/output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:11:59.289205"
    },
    {
      "url": "https://atcoder.jp/contests/abc395/tasks/abc395_a",
      "contest": "ABC 395",
      "title": "Strictly Increasing?",
      "problem_statement": "配点 :\n100\n点\n問題文\n正整数\nN\nと、長さ\nN\nの正整数列\nA=(A_1,A_2,\\dots,A_N)\nが与えられます。\nA\nが狭義単調増加であるとは、\n1\\leq i\\lt N\nなるすべての整数\ni\nについて\nA_i\\lt A_{i+1}\nが成り立つことをを指します。\nA\nが狭義単調増加であるか判定してください。\n制約\n2\\leq N\\leq 100\n1\\leq A_i\\leq 1000\n(1\\leq i\\leq N)\n入力はすべて整数\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nA_1\nA_2\n\\dots\nA_N\n出力\nA\nが狭義単調増加であるならば\nYes\nと、そうでないならば\nNo\nと出力せよ。\n正誤判定器は大文字と小文字を区別せず、どちらも受理する。例えば、答えが\nYes\nとなるときに\nyes\nや\nYES\n、\nyEs\nなどと出力しても正解と判定される。\n入力例 1\n3\n1 2 5\n出力例 1\nYes\nA_1\\lt A_2\nかつ\nA_2\\lt A_3\nなので\nA\nは狭義単調増加です。\n入力例 2\n3\n3 9 5\n出力例 2\nNo\nA_1\\lt A_2\nですが、\nA_2\\lt A_3\nでないので\nA\nは狭義単調増加ではありません。\n入力例 3\n10\n1 1 2 3 5 8 13 21 34 55\n出力例 3\nNo\nA_1\\lt A_2\nでないので\nA\nは狭義単調増加ではありません。\nScore :\n100\npoints\nProblem Statement\nYou are given a positive integer\nN\nand a sequence of positive integers\nA = (A_1,A_2,\\dots,A_N)\nof length\nN\n.\nDetermine whether\nA\nis strictly increasing, that is, whether\nA_i < A_{i+1}\nholds for every integer\ni\nwith\n1 \\leq i < N\n.\nConstraints\n2 \\leq N \\leq 100\n1 \\leq A_i \\leq 1000 \\ (1 \\leq i \\leq N)\nAll input values are integers.\nInput\nThe input is given from Standard Input in the following format:\nN\nA_1\nA_2\n\\dots\nA_N\nOutput\nIf\nA\nis strictly increasing, print\nYes\n; otherwise, print\nNo\n.\nThe judge is case-insensitive. For example, if the correct answer is\nYes\n, any of\nyes\n,\nYES\n, and\nyEs\nwill be accepted.\nSample Input 1\n3\n1 2 5\nSample Output 1\nYes\nA_1 < A_2\nand\nA_2 < A_3\n, so\nA\nis strictly increasing.\nSample Input 2\n3\n3 9 5\nSample Output 2\nNo\nA_1 < A_2\n, but\nA_2 < A_3\ndoes not hold, so\nA\nis not strictly increasing.\nSample Input 3\n10\n1 1 2 3 5 8 13 21 34 55\nSample Output 3\nNo\nA_1 < A_2\ndoes not hold, so\nA\nis not strictly increasing.",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "IfAis strictly increasing, printYes; otherwise, printNo.\nThe judge is case-insensitive. For example, if the correct answer isYes, any ofyes,YES, andyEswill be accepted.",
      "sample_cases": [
        {
          "input": "3\n1 2 5",
          "output": "Yes"
        },
        {
          "input": "3\n3 9 5",
          "output": "No"
        },
        {
          "input": "10\n1 1 2 3 5 8 13 21 34 55",
          "output": "No"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You need to check if a list of numbers is strictly increasing, which means each number is smaller than the next one. If all numbers follow this rule, print 'Yes'; otherwise, print 'No'.",
        "key_concepts": [
          "if-statements",
          "loops",
          "lists/arrays",
          "input/output handling"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:12:02.853711"
    },
    {
      "url": "https://atcoder.jp/contests/abc394/tasks/abc394_a",
      "contest": "ABC 394",
      "title": "22222",
      "problem_statement": "配点 :\n100\n点\n問題文\n数字からなる文字列\nS\nが与えられます。\nS\nから\n2\n以外の文字を削除し、残った文字を順序を保って結合した文字列を求めてください。\n制約\nS\nは数字からなる長さ\n1\n以上\n100\n以下の文字列\nS\nは\n2\nを\n1\nつ以上含む\n入力\n入力は以下の形式で標準入力から与えられる。\nS\n出力\n答えを出力せよ。\n入力例 1\n20250222\n出力例 1\n22222\n20250222\nから\n0\n,\n5\n,\n0\nを削除し、残った文字を順序を保って結合することで文字列\n22222\nが得られます。\n入力例 2\n2\n出力例 2\n2\n入力例 3\n22222000111222222\n出力例 3\n22222222222\nScore :\n100\npoints\nProblem Statement\nYou are given a string\nS\nconsisting of digits.\nRemove all characters from\nS\nexcept for\n2\n, and then concatenate the remaining characters in their original order to form a new string.\nConstraints\nS\nis a string consisting of digits with length between\n1\nand\n100\n, inclusive.\nS\ncontains at least one\n2\n.\nInput\nThe input is given from Standard Input in the following format:\nS\nOutput\nPrint the answer.\nSample Input 1\n20250222\nSample Output 1\n22222\nBy removing\n0\n,\n5\n, and\n0\nfrom\n20250222\nand then concatenating the remaining characters in their original order, the string\n22222\nis obtained.\nSample Input 2\n2\nSample Output 2\n2\nSample Input 3\n22222000111222222\nSample Output 3\n22222222222",
      "constraints": "Sis a string consisting of digits with length between1and100, inclusive.Scontains at least one2.",
      "input_format": "Input format not specified",
      "output_format": "Print the answer.",
      "sample_cases": [
        {
          "input": "20250222",
          "output": "22222"
        },
        {
          "input": "2",
          "output": "2"
        },
        {
          "input": "22222000111222222",
          "output": "22222222222"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have a string made of numbers. Your task is to keep only the number '2' from the string and remove everything else, then show the new string with only '2's in the same order they appeared.",
        "key_concepts": [
          "string manipulation",
          "loops",
          "conditional statements"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:12:06.437521"
    },
    {
      "url": "https://atcoder.jp/contests/abc393/tasks/abc393_a",
      "contest": "ABC 393",
      "title": "Poisonous Oyster",
      "problem_statement": "配点 :\n100\n点\n問題文\n4\n種類の牡蠣\n1,2,3,4\nがあります。\r\nこのうちちょうど\n1\n種類の牡蠣については、食べるとお腹を壊してしまいます。\r\nそれ以外の牡蠣については、食べてもお腹を壊しません。\n高橋君が牡蠣\n1,2\nを食べ、青木君が牡蠣\n1,3\nを食べました。\r\n二人がこれによってお腹を壊したかどうかの情報が二つの文字列\nS_1,S_2\nによって与えられます。\r\n具体的には、\nS_1=\nsick\nであるとき高橋君がお腹を壊したことを、\nS_1=\nfine\nであるとき高橋君がお腹を壊さなかったことを表します。\r\n同様に、\nS_2=\nsick\nであるとき青木君がお腹を壊したことを、\nS_2=\nfine\nであるとき青木君がお腹を壊さなかったことを表します。\n与えられた情報をもとに、どの種類の牡蠣を食べるとお腹を壊すか判定してください。\n制約\nS_1, S_2\nはそれぞれ\nsick\nまたは\nfine\n入力\n入力は以下の形式で標準入力から与えられる。\nS_1\nS_2\n出力\n食べるとお腹を壊す牡蠣の種類の番号を出力せよ。\n入力例 1\nsick fine\n出力例 1\n2\n牡蠣\n1,2\nを食べた高橋君はお腹を壊し、牡蠣\n1,3\nを食べた青木君はお腹を壊さなかったので、牡蠣\n2\nを食べるとお腹を壊すことがわかります。\n入力例 2\nfine fine\n出力例 2\n4\n牡蠣\n1,2\nを食べた高橋君も牡蠣\n1,3\nを食べた青木君もお腹を壊さなかったので、残る牡蠣\n4\nを食べるとお腹を壊すことがわかります。\nScore :\n100\npoints\nProblem Statement\nThere are four types of oysters, labeled\n1\n,\n2\n,\n3\n, and\n4\n. Exactly one of these types causes stomach trouble if eaten. The other types do not cause stomach trouble when eaten.\nTakahashi ate oysters\n1\nand\n2\n, and Aoki ate oysters\n1\nand\n3\n. The information on whether each person got sick is given as two strings\nS_1\nand\nS_2\n. Specifically,\nS_1 =\nsick\nmeans Takahashi got sick, and\nS_1 =\nfine\nmeans Takahashi did not get sick. Likewise,\nS_2 =\nsick\nmeans Aoki got sick, and\nS_2 =\nfine\nmeans Aoki did not get sick.\nBased on the given information, find which type of oyster causes stomach trouble.\nConstraints\nEach of\nS_1\nand\nS_2\nis\nsick\nor\nfine\n.\nInput\nThe input is given from Standard Input in the following format:\nS_1\nS_2\nOutput\nPrint the label of the oyster that causes stomach trouble if eaten.\nSample Input 1\nsick fine\nSample Output 1\n2\nTakahashi (who ate oysters\n1\nand\n2\n) got sick, and Aoki (who ate oysters\n1\nand\n3\n) did not get sick, so it can be concluded that oyster\n2\ncauses stomach trouble.\nSample Input 2\nfine fine\nSample Output 2\n4\nNeither Takahashi (who ate oysters\n1\nand\n2\n) nor Aoki (who ate oysters\n1\nand\n3\n) got sick, so it can be concluded that oyster\n4\ncauses stomach trouble.",
      "constraints": "Each ofS_1andS_2issickorfine.",
      "input_format": "Input format not specified",
      "output_format": "Print the label of the oyster that causes stomach trouble if eaten.",
      "sample_cases": [
        {
          "input": "sick fine",
          "output": "2"
        },
        {
          "input": "fine fine",
          "output": "4"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have four types of oysters, and one of them makes people sick. Two friends tried different oysters, and you need to figure out which type makes someone sick based on whether they felt fine or sick after eating.",
        "key_concepts": [
          "if-statements",
          "conditional logic",
          "input and output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:12:09.714282"
    },
    {
      "url": "https://atcoder.jp/contests/abc392/tasks/abc392_a",
      "contest": "ABC 392",
      "title": "Shuffled Equation",
      "problem_statement": "配点 :\n100\n点\n問題文\n整数列\nA=(A_1,A_2,A_3)\nが与えられます。\nA\nの要素を自由に並べ替えた列を\nB=(B_1,B_2,B_3)\nとします。\nこのとき、\nB_1 \\times B_2 = B_3\nを満たすようにできるか判定してください。\n制約\n入力は全て整数\n1 \\le A_1,A_2,A_3 \\le 100\n入力\n入力は以下の形式で標準入力から与えられる。\nA_1\nA_2\nA_3\n出力\nB_1 \\times B_2 = B_3\nを満たすようにできるなら\nYes\n、そうでないなら\nNo\nと出力せよ。\n入力例 1\n3 15 5\n出力例 1\nYes\nA=(3,15,5)\nです。\nB=(3,5,15)\nと並べ替えることで、\nB_1 \\times B_2 = B_3\nを満たすようにできます。\n入力例 2\n5 3 2\n出力例 2\nNo\nB\nをどのように定めても、\nB_1 \\times B_2 = B_3\nを満たすようにはできません。\n入力例 3\n3 3 9\n出力例 3\nYes\nScore :\n100\npoints\nProblem Statement\nYou are given a sequence of integers\nA = (A_1, A_2, A_3)\n.\nLet\nB = (B_1, B_2, B_3)\nbe any permutation of\nA\n.\nDetermine whether it is possible that\nB_1 \\times B_2 = B_3\n.\nConstraints\nAll input values are integers.\n1 \\le A_1, A_2, A_3 \\le 100\nInput\nThe input is given from Standard Input in the following format:\nA_1\nA_2\nA_3\nOutput\nIf it is possible that\nB_1 \\times B_2 = B_3\n, print\nYes\n; otherwise, print\nNo\n.\nSample Input 1\n3 15 5\nSample Output 1\nYes\nHere,\nA=(3,15,5)\n.\r\nBy rearranging it as\nB=(3,5,15)\n, we can satisfy\nB_1 \\times B_2 = B_3\n.\nSample Input 2\n5 3 2\nSample Output 2\nNo\nNo permutation of\nB\nsatisfies\nB_1 \\times B_2 = B_3\n.",
      "constraints": "No constraints specified",
      "input_format": "1 \\le A_1, A_2, A_3 \\le 100",
      "output_format": "If it is possible thatB_1 \\times B_2 = B_3, printYes; otherwise, printNo.",
      "sample_cases": [
        {
          "input": "3 15 5",
          "output": "Yes"
        },
        {
          "input": "5 3 2",
          "output": "No"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have three numbers, and you can rearrange them in any order. Your task is to check if you can multiply two of the numbers together to equal the third number.",
        "key_concepts": [
          "if-statements",
          "loops",
          "basic math",
          "arrays or lists"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:12:13.151428"
    },
    {
      "url": "https://atcoder.jp/contests/abc391/tasks/abc391_a",
      "contest": "ABC 391",
      "title": "Lucky Direction",
      "problem_statement": "配点 :\n100\n点\n問題文\n8\n種類の方角（北、東、西、南、北東、北西、南東、南西）のいずれかを表す文字列\nD\nが与えられます。方角とそれを表す文字列は以下のように対応しています。\n北：\nN\n東：\nE\n西：\nW\n南：\nS\n北東：\nNE\n北西：\nNW\n南東：\nSE\n南西：\nSW\nD\nが表す方角の反対の方角を表す文字列を出力してください。\n制約\nD\nは\nN\n,\nE\n,\nW\n,\nS\n,\nNE\n,\nNW\n,\nSE\n,\nSW\nのいずれか\n入力\n入力は以下の形式で標準入力から与えられる。\nD\n出力\n答えを出力せよ。\n入力例 1\nN\n出力例 1\nS\n北の反対の方角である南を表す\nS\nを出力してください。\n入力例 2\nSE\n出力例 2\nNW\n南東の反対の方角である北西を表す\nNW\nを出力してください。\nScore :\n100\npoints\nProblem Statement\nYou are given a string\nD\nrepresenting one of the eight directions (north, east, west, south, northeast, northwest, southeast, southwest). The correspondence between the directions and their representing strings is as follows.\nNorth:\nN\nEast:\nE\nWest:\nW\nSouth:\nS\nNortheast:\nNE\nNorthwest:\nNW\nSoutheast:\nSE\nSouthwest:\nSW\nPrint the string representing the direction opposite to the direction denoted by\nD\n.\nConstraints\nD\nis one of\nN\n,\nE\n,\nW\n,\nS\n,\nNE\n,\nNW\n,\nSE\n,\nSW\n.\nInput\nThe input is given from Standard Input in the following format:\nD\nOutput\nPrint the answer.\nSample Input 1\nN\nSample Output 1\nS\nPrint\nS\n, which represents south, the direction opposite to north.\nSample Input 2\nSE\nSample Output 2\nNW\nPrint\nNW\n, which represents northwest, the direction opposite to southeast.",
      "constraints": "Dis one ofN,E,W,S,NE,NW,SE,SW.",
      "input_format": "Input format not specified",
      "output_format": "Print the answer.",
      "sample_cases": [
        {
          "input": "N",
          "output": "S"
        },
        {
          "input": "SE",
          "output": "NW"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You will receive a direction as a letter (like 'N' for North or 'E' for East). Your task is to find and print the opposite direction (for example, if you get 'N', you should print 'S' for South).",
        "key_concepts": [
          "if-statements",
          "string manipulation",
          "input and output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:12:16.274871"
    },
    {
      "url": "https://atcoder.jp/contests/abc390/tasks/abc390_a",
      "contest": "ABC 390",
      "title": "12435",
      "problem_statement": "配点 :\n150\n点\n問題文\n(1,2,3,4,5)\nを並び替えた整数列\nA=(A_1,A_2,A_3,A_4,A_5)\nが与えられます。\nA\nの隣り合う\n2\nつの項を入れ替える操作を\nちょうど\n1\n回\n行うことで\nA\nを昇順にすることができるか判定してください。\n制約\nA\nは\n(1,2,3,4,5)\nを並び替えてできる長さ\n5\nの整数列\n入力\n入力は以下の形式で標準入力から与えられる。\nA_1\nA_2\nA_3\nA_4\nA_5\n出力\nちょうど\n1\n回の操作で\nA\nを昇順にすることができるならば\nYes\nを、できないならば\nNo\nを出力せよ。\n入力例 1\n1 2 4 3 5\n出力例 1\nYes\nA_3\nと\nA_4\nを入れ替えることで\nA=(1,2,3,4,5)\nとなり、\nA\nを昇順に並び替えることができます。したがって、\nYes\nを出力してください。\n入力例 2\n5 3 2 4 1\n出力例 2\nNo\nどのような操作をしても\nA\nを昇順に並び替えることはできません。\n入力例 3\n1 2 3 4 5\n出力例 3\nNo\nちょうど\n1\n回操作をする必要があります。\n入力例 4\n2 1 3 4 5\n出力例 4\nYes\nScore :\n150\npoints\nProblem Statement\nYou are given an integer sequence\nA=(A_1,A_2,A_3,A_4,A_5)\nobtained by permuting\n(1,2,3,4,5)\n.\nDetermine whether\nA\ncan be sorted in ascending order by performing\nexactly one\noperation of swapping two adjacent elements in\nA\n.\nConstraints\nA\nis an integer sequence of length\n5\nobtained by permuting\n(1,2,3,4,5)\n.\nInput\nThe input is given from Standard Input in the following format:\nA_1\nA_2\nA_3\nA_4\nA_5\nOutput\nIf\nA\ncan be sorted in ascending order by exactly one operation, print\nYes\n; otherwise, print\nNo\n.\nSample Input 1\n1 2 4 3 5\nSample Output 1\nYes\nBy swapping\nA_3\nand\nA_4\n,\nA\nbecomes\n(1,2,3,4,5)\n, so it can be sorted in ascending order. Therefore, print\nYes\n.\nSample Input 2\n5 3 2 4 1\nSample Output 2\nNo\nNo matter what operation is performed, it is impossible to sort\nA\nin ascending order.\nSample Input 3\n1 2 3 4 5\nSample Output 3\nNo\nYou must perform exactly one operation.\nSample Input 4\n2 1 3 4 5\nSample Output 4\nYes",
      "constraints": "Ais an integer sequence of length5obtained by permuting(1,2,3,4,5).",
      "input_format": "Input format not specified",
      "output_format": "IfAcan be sorted in ascending order by exactly one operation, printYes; otherwise, printNo.",
      "sample_cases": [
        {
          "input": "1 2 4 3 5",
          "output": "Yes"
        },
        {
          "input": "5 3 2 4 1",
          "output": "No"
        },
        {
          "input": "1 2 3 4 5",
          "output": "No"
        },
        {
          "input": "2 1 3 4 5",
          "output": "Yes"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have a list of five numbers that are mixed up. You need to check if you can sort them in order by swapping just two numbers that are next to each other. If you can do it, say 'Yes'; if not, say 'No'.",
        "key_concepts": [
          "if-statements",
          "arrays/lists",
          "swapping elements",
          "basic comparison"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:12:20.747245"
    },
    {
      "url": "https://atcoder.jp/contests/abc389/tasks/abc389_a",
      "contest": "ABC 389",
      "title": "9x9",
      "problem_statement": "配点 :\n100\n点\n問題文\n1\n文字目が数字、\n2\n文字目が文字\nx\n、\n3\n文字目が数字であるような\n3\n文字の文字列\nS\nが与えられます。\nS\nの\n2\nつの数の積を求めてください。\n制約\nS\nは\n1\n文字目が\n1\n以上\n9\n以下の整数、\n2\n文字目が文字\nx\n、\n3\n文字目が\n1\n以上\n9\n以下の整数であるような\n3\n文字の文字列\n入力\n入力は以下の形式で標準入力から与えられる。\nS\n出力\n答えを整数として出力せよ。\n入力例 1\n3x8\n出力例 1\n24\n3 \\times 8 = 24\nより、\n24\nを出力します。\n入力例 2\n9x9\n出力例 2\n81\n9 \\times 9 = 81\nより、\n81\nを出力します。\nScore :\n100\npoints\nProblem Statement\nYou are given a\n3\n-character string\nS\n, where the first character is a digit, the second character is the character\nx\n, and the third character is a digit.\nFind the product of the two numbers in\nS\n.\nConstraints\nS\nis a\n3\n-character string where the first character is an integer between\n1\nand\n9\n, inclusive, the second character is the character\nx\n, and the third character is an integer between\n1\nand\n9\n, inclusive.\nInput\nThe input is given from Standard Input in the following format:\nS\nOutput\nPrint the answer as an integer.\nSample Input 1\n3x8\nSample Output 1\n24\nFrom\n3 \\times 8 = 24\n, print\n24\n.\nSample Input 2\n9x9\nSample Output 2\n81\nFrom\n9 \\times 9 = 81\n, print\n81\n.",
      "constraints": "Sis a3-character string where the first character is an integer between1and9, inclusive, the second character is the characterx, and the third character is an integer between1and9, inclusive.",
      "input_format": "Input format not specified",
      "output_format": "Print the answer as an integer.",
      "sample_cases": [
        {
          "input": "3x8",
          "output": "24"
        },
        {
          "input": "9x9",
          "output": "81"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You are given a string with three characters. The first and third characters are numbers between 1 and 9, and the middle character is 'x'. Your task is to multiply the two numbers together and print the result.",
        "key_concepts": [
          "string manipulation",
          "basic math",
          "input/output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:12:24.866836"
    },
    {
      "url": "https://atcoder.jp/contests/abc388/tasks/abc388_a",
      "contest": "ABC 388",
      "title": "?UPC",
      "problem_statement": "配点 :\n100\n点\n問題文\n文字列\nS\nが与えられます。ここで、\nS\nの\n1\n文字目は英大文字、\n2\n文字目以降は英小文字です。\nS\nの\n1\n文字目と\nUPC\nをこの順に結合した文字列を出力してください。\n制約\nS\nは長さ\n1\n以上\n100\n以下の文字列\nS\nの\n1\n文字目は英大文字\nS\nの\n2\n文字目以降は英小文字\n入力\n入力は以下の形式で標準入力から与えられる。\nS\n出力\nS\nの\n1\n文字目と\nUPC\nをこの順に結合した文字列を出力せよ。\n入力例 1\nKyoto\n出力例 1\nKUPC\nKyoto\nの\n1\n文字目は\nK\nであるため、\nK\nと\nUPC\nを結合した\nKUPC\nを出力します。\n入力例 2\nTohoku\n出力例 2\nTUPC\nScore :\n100\npoints\nProblem Statement\nYou are given a string\nS\n. Here, the first character of\nS\nis an uppercase English letter, and the second and subsequent characters are lowercase English letters.\nPrint the string formed by concatenating the first character of\nS\nand\nUPC\nin this order.\nConstraints\nS\nis a string of length between\n1\nand\n100\n, inclusive.\nThe first character of\nS\nis an uppercase English letter.\nThe second and subsequent characters of\nS\nare lowercase English letters.\nInput\nThe input is given from Standard Input in the following format:\nS\nOutput\nPrint the string formed by concatenating the first character of\nS\nand\nUPC\nin this order.\nSample Input 1\nKyoto\nSample Output 1\nKUPC\nThe first character of\nKyoto\nis\nK\n, so concatenate\nK\nand\nUPC\n, and print\nKUPC\n.\nSample Input 2\nTohoku\nSample Output 2\nTUPC",
      "constraints": "Sis a string of length between1and100, inclusive.The first character ofSis an uppercase English letter.The second and subsequent characters ofSare lowercase English letters.",
      "input_format": "Input format not specified",
      "output_format": "Print the string formed by concatenating the first character ofSandUPCin this order.",
      "sample_cases": [
        {
          "input": "Kyoto",
          "output": "KUPC"
        },
        {
          "input": "Tohoku",
          "output": "TUPC"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You need to take a word that starts with a capital letter and ends with lowercase letters. Then, combine the first letter of that word with the letters 'UPC' and print the result.",
        "key_concepts": [
          "string manipulation",
          "concatenation",
          "input/output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:12:28.486015"
    },
    {
      "url": "https://atcoder.jp/contests/abc387/tasks/abc387_a",
      "contest": "ABC 387",
      "title": "Happy New Year 2025",
      "problem_statement": "配点 :\n100\n点\n問題文\n正整数\nA,B\nが与えられます。\nA+B\nの二乗を出力してください。\n制約\n1\\leq A,B \\leq 2025\n入力は全て整数\n入力\n入力は以下の形式で標準入力から与えられる。\nA\nB\n出力\n答えを出力せよ。\n入力例 1\n20 25\n出力例 1\n2025\n(20+25)^2=2025\nです。\n入力例 2\n30 25\n出力例 2\n3025\n入力例 3\n45 11\n出力例 3\n3136\n入力例 4\n2025 1111\n出力例 4\n9834496\nScore :\n100\npoints\nProblem Statement\nYou are given two positive integers\nA\nand\nB\n.\nOutput the square of\nA + B\n.\nConstraints\n1 \\leq A,B \\leq 2025\nAll input values are integers.\nInput\nThe input is given from Standard Input in the following format:\nA\nB\nOutput\nPrint the answer.\nSample Input 1\n20 25\nSample Output 1\n2025\n(20+25)^2=2025\n.\nSample Input 2\n30 25\nSample Output 2\n3025\nSample Input 3\n45 11\nSample Output 3\n3136\nSample Input 4\n2025 1111\nSample Output 4\n9834496",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "Output format not specified",
      "sample_cases": [
        {
          "input": "20 25",
          "output": "2025"
        },
        {
          "input": "30 25",
          "output": "3025"
        },
        {
          "input": "45 11",
          "output": "3136"
        },
        {
          "input": "2025 1111",
          "output": "9834496"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You need to take two positive numbers, add them together, and then find the result of that sum multiplied by itself. For example, if you add 2 and 3, you should calculate (2 + 3) * (2 + 3).",
        "key_concepts": [
          "basic math",
          "input/output",
          "variables",
          "addition",
          "squaring a number"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:12:34.247251"
    },
    {
      "url": "https://atcoder.jp/contests/abc386/tasks/abc386_a",
      "contest": "ABC 386",
      "title": "Full House 2",
      "problem_statement": "配点 :\n100\n点\n問題文\n4\n枚のカードがあり、それぞれのカードには整数\nA,B,C,D\nが書かれています。\nここに\n1\n枚カードを加え、フルハウスとできるか判定してください。\nただし、\n5\n枚組のカードは以下の条件を満たすとき、またそのときに限って、フルハウスであると呼ばれます。\n異なる整数\nx,y\nについて、\nx\nが書かれたカード\n3\n枚と\ny\nが書かれたカード\n2\n枚からなる。\n制約\n入力は全て整数\n1 \\le A,B,C,D \\le 13\n入力\n入力は以下の形式で標準入力から与えられる。\nA\nB\nC\nD\n出力\n1\n枚カードを加えてフルハウスとできる場合は\nYes\n、そうでないときは\nNo\nと出力せよ。\n入力例 1\n7 7 7 1\n出力例 1\nYes\n7,7,7,1\nに\n1\nを加えた時、フルハウスとなります。\n入力例 2\n13 12 11 10\n出力例 2\nNo\n13,12,11,10\nに何を加えてもフルハウスにはなりません。\n入力例 3\n3 3 5 5\n出力例 3\nYes\n3,3,5,5\nに\n3\nを加えた時、フルハウスとなります。\nまた、\n5\nを加えてもフルハウスとなります。\n入力例 4\n8 8 8 8\n出力例 4\nNo\n8,8,8,8\nに何を加えてもフルハウスにはなりません。\n同じ\n5\n枚のカードはフルハウスではないことに注意してください。\n入力例 5\n1 3 4 1\n出力例 5\nNo\nScore :\n100\npoints\nProblem Statement\nThere are four cards with integers\nA,B,C,D\nwritten on them.\nDetermine whether a Full House can be formed by adding one card.\nA set of five cards is called a Full House if and only if the following condition is satisfied:\nFor two distinct integers\nx\nand\ny\n, there are three cards with\nx\nwritten on them and two cards with\ny\nwritten on them.\nConstraints\nAll input values are integers.\n1 \\le A,B,C,D \\le 13\nInput\nThe input is given from Standard Input in the following format:\nA\nB\nC\nD\nOutput\nIf adding one card can form a Full House, print\nYes\n; otherwise, print\nNo\n.\nSample Input 1\n7 7 7 1\nSample Output 1\nYes\nAdding\n1\nto\n7,7,7,1\nforms a Full House.\nSample Input 2\n13 12 11 10\nSample Output 2\nNo\nAdding anything to\n13,12,11,10\ndoes not form a Full House.\nSample Input 3\n3 3 5 5\nSample Output 3\nYes\nAdding\n3,3,5,5\nto\n3\nforms a Full House.\nAlso, adding\n5\nforms a Full House.\nSample Input 4\n8 8 8 8\nSample Output 4\nNo\nAdding anything to\n8,8,8,8\ndoes not form a Full House.\nNote that five identical cards do not form a Full House.\nSample Input 5\n1 3 4 1\nSample Output 5\nNo",
      "constraints": "No constraints specified",
      "input_format": "1 \\le A,B,C,D \\le 13",
      "output_format": "If adding one card can form a Full House, printYes; otherwise, printNo.",
      "sample_cases": [
        {
          "input": "7 7 7 1",
          "output": "Yes"
        },
        {
          "input": "13 12 11 10",
          "output": "No"
        },
        {
          "input": "3 3 5 5",
          "output": "Yes"
        },
        {
          "input": "8 8 8 8",
          "output": "No"
        },
        {
          "input": "1 3 4 1",
          "output": "No"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have four cards with numbers on them. Your task is to check if you can add one more card to make a special combination called a Full House, which consists of three cards with one number and two cards with another number.",
        "key_concepts": [
          "if-statements",
          "basic condition checking",
          "input and output",
          "data handling"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:12:37.568556"
    },
    {
      "url": "https://atcoder.jp/contests/abc385/tasks/abc385_a",
      "contest": "ABC 385",
      "title": "Equally",
      "problem_statement": "配点 :\n100\n点\n問題文\n3\nつの整数\nA,B,C\nが与えられます。これら\n3\nつの整数を\n2\nつ以上のグループに分けて、それぞれのグループ内の数の和を等しくできるかどうか判定してください。\n制約\n1 \\leq A,B,C \\leq 1000\n入力はすべて整数\n入力\n入力は以下の形式で標準入力から与えられる。\nA\nB\nC\n出力\nA,B,C\nを和の等しい\n2\nつ以上のグループに分けることができるならば\nYes\nを、できないならば\nNo\nを出力せよ。\n入力例 1\n3 8 5\n出力例 1\nYes\n例えば、\n(3,5),(8)\nと\n2\nつのグループに分けることで、それぞれのグループ内の和をどちらも\n8\nにすることができます。\n入力例 2\n2 2 2\n出力例 2\nYes\n(2),(2),(2)\nと\n3\nつのグループに分けることで、それぞれのグループ内の和をどれも\n2\nにすることができます。\n入力例 3\n1 2 4\n出力例 3\nNo\nどのように\n2\nつ以上のグループに分けても、和を等しくすることはできません。\nScore :\n100\npoints\nProblem Statement\nYou are given three integers\nA,B,C\n. Determine whether it is possible to divide these three integers into two or more groups so that these groups have equal sums.\nConstraints\n1 \\leq A,B,C \\leq 1000\nAll input values are integers.\nInput\nThe input is given from Standard Input in the following format:\nA\nB\nC\nOutput\nIf it is possible to divide\nA,B,C\ninto two or more groups with equal sums, print\nYes\n; otherwise, print\nNo\n.\nSample Input 1\n3 8 5\nSample Output 1\nYes\nFor example, by dividing into two groups\n(3,5)\nand\n(8)\n, each group can have the sum\n8\n.\nSample Input 2\n2 2 2\nSample Output 2\nYes\nBy dividing into three groups\n(2),(2),(2)\n, each group can have the sum\n2\n.\nSample Input 3\n1 2 4\nSample Output 3\nNo\nNo matter how you divide them into two or more groups, it is not possible to make the sums equal.",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "If it is possible to divideA,B,Cinto two or more groups with equal sums, printYes; otherwise, printNo.",
      "sample_cases": [
        {
          "input": "3 8 5",
          "output": "Yes"
        },
        {
          "input": "2 2 2",
          "output": "Yes"
        },
        {
          "input": "1 2 4",
          "output": "No"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You are given three numbers. Your task is to find out if you can split these numbers into two or more groups where the sum of each group is the same.",
        "key_concepts": [
          "if-statements",
          "basic math",
          "input/output handling"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:12:40.949585"
    },
    {
      "url": "https://atcoder.jp/contests/abc384/tasks/abc384_a",
      "contest": "ABC 384",
      "title": "aaaadaa",
      "problem_statement": "配点 :\n100\n点\n問題文\n長さ\nN\nの英小文字からなる文字列\nS\nと英小文字\nc_1,c_2\nが与えられます。\nS\nの文字のうち\nc_1\nであるもの\n以外\nを全て\nc_2\nに置き換えた文字列を求めてください。\n制約\n1\\le N\\le 100\nN\nは整数\nc_1,c_2\nは英小文字\nS\nは英小文字からなる長さ\nN\nの文字列\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nc_1\nc_2\nS\n出力\n答えを出力せよ。\n入力例 1\n3 b g\nabc\n出力例 1\ngbg\nS=\nabc\nのうち、\nb\nでない\na\nと\nc\nを\ng\nに置き換えた結果\ngbg\nになります。したがって、\ngbg\nを出力してください。\n入力例 2\n1 s h\ns\n出力例 2\ns\n置き換えた後の文字列が元の文字列と変わらない場合もあります。\n入力例 3\n7 d a\natcoder\n出力例 3\naaaadaa\n入力例 4\n10 b a\nacaabcabba\n出力例 4\naaaabaabba\nScore :\n100\npoints\nProblem Statement\nYou are given a string\nS\nof length\nN\nconsisting of lowercase English letters, along with lowercase English letters\nc_1\nand\nc_2\n.\nFind the string obtained by replacing every character of\nS\nthat is\nnot\nc_1\nwith\nc_2\n.\nConstraints\n1\\le N\\le 100\nN\nis an integer.\nc_1\nand\nc_2\nare lowercase English letters.\nS\nis a string of length\nN\nconsisting of lowercase English letters.\nInput\nThe input is given in the following format from Standard Input:\nN\nc_1\nc_2\nS\nOutput\nPrint the answer.\nSample Input 1\n3 b g\nabc\nSample Output 1\ngbg\nReplacing\na\nand\nc\n(which are not\nb\n) with\ng\nin\nS=\nabc\nresults in\ngbg\n, so print\ngbg\n.\nSample Input 2\n1 s h\ns\nSample Output 2\ns\nIt is possible that the resulting string after replacement is the same as the original string.\nSample Input 3\n7 d a\natcoder\nSample Output 3\naaaadaa\nSample Input 4\n10 b a\nacaabcabba\nSample Output 4\naaaabaabba",
      "constraints": "1\\le N\\le 100Nis an integer.c_1andc_2are lowercase English letters.Sis a string of lengthNconsisting of lowercase English letters.",
      "input_format": "Input format not specified",
      "output_format": "Print the answer.",
      "sample_cases": [
        {
          "input": "3 b g\nabc",
          "output": "gbg"
        },
        {
          "input": "1 s h\ns",
          "output": "s"
        },
        {
          "input": "7 d a\natcoder",
          "output": "aaaadaa"
        },
        {
          "input": "10 b a\nacaabcabba",
          "output": "aaaabaabba"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have a word made of small letters. You need to change every letter that is not a specific letter to another specific letter. For example, if you want to keep 'b' and change everything else to 'g', you will replace all letters except 'b' with 'g'.",
        "key_concepts": [
          "string manipulation",
          "loops",
          "conditionals"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:12:44.022297"
    },
    {
      "url": "https://atcoder.jp/contests/abc383/tasks/abc383_a",
      "contest": "ABC 383",
      "title": "Humidifier 1",
      "problem_statement": "配点 :\n150\n点\n問題文\nAtCoder社のオフィスには加湿器が\n1\nつあります。現在は時刻\n0\nであり、加湿器には水が入っていません。\nあなたはこの加湿器にこれから\nN\n回水を追加します。\ni\n回目\n(1\\leq i \\leq N)\nの水の追加は時刻\nT_i\nに行い、水を\nV_i\nリットル追加します。なお、\nT_i < T_{i+1}\n(1 \\leq i \\leq N-1)\nを満たすことが保証されます。\nただし、加湿器には穴が空いていて、加湿器に水が入っている間は\n1\n単位時間につき水が\n1\nリットル減り続けます。\n時刻\nT_N\nに水を追加し終えたとき、加湿器に残っている水の量を求めてください。\n制約\n1 \\leq N \\leq 100\n1 \\leq T_i \\leq 100\n(\n1 \\leq i \\leq N\n)\n1 \\leq V_i \\leq 100\n(\n1 \\leq i \\leq N\n)\nT_i < T_{i+1}\n(\n1 \\leq i \\leq N-1\n)\n入力は全て整数\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nT_1\nV_1\nT_2\nV_2\n\\vdots\nT_N\nV_N\n出力\n答えを出力せよ。\n入力例 1\n4\r\n1 3\r\n3 1\r\n4 4\r\n7 1\n出力例 1\n3\n時系列で以下のように水が追加されます。\n時刻\n1\n: 水を追加する前は\n0\nリットル入っており、\n3\nリットル追加して加湿器には\n3\nリットルの水が入っています。\n時刻\n3\n: 水を追加する前は\n1\nリットル入っており、\n1\nリットル追加して加湿器には\n2\nリットルの水が入っています。\n時刻\n4\n: 水を追加する前は\n1\nリットル入っており、\n4\nリットル追加して加湿器には\n5\nリットルの水が入っています。\n時刻\n7\n: 水を追加する前は\n2\nリットル入っており、\n1\nリットル追加して加湿器には\n3\nリットルの水が入っています。\n時刻\n7\nに水を追加し終えたとき、加湿器に残っている水の量は\n3\nリットルです。よって答えは\n3\nです。\n入力例 2\n3\r\n1 8\r\n10 11\r\n21 5\n出力例 2\n5\n入力例 3\n10\r\n2 1\r\n22 10\r\n26 17\r\n29 2\r\n45 20\r\n47 32\r\n72 12\r\n75 1\r\n81 31\r\n97 7\n出力例 3\n57\nScore :\n150\npoints\nProblem Statement\nThere is one humidifier in the AtCoder company office. The current time is\n0\n, and the humidifier has no water inside.\nYou will add water to this humidifier\nN\ntimes. The\ni\n-th addition of water (\n1 \\leq i \\leq N\n) takes place at time\nT_i\n, and you add\nV_i\nliters of water. It is guaranteed that\nT_i < T_{i+1}\nfor all\n1 \\leq i \\leq N-1\n.\nHowever, the humidifier has a leak, and as long as there is water inside, the amount of water decreases by\n1\nliter per unit time.\nFind the amount of water remaining in the humidifier immediately after you finish adding water at time\nT_N\n.\nConstraints\n1 \\leq N \\leq 100\n1 \\leq T_i \\leq 100\n(\n1 \\leq i \\leq N\n)\n1 \\leq V_i \\leq 100\n(\n1 \\leq i \\leq N\n)\nT_i < T_{i+1}\n(\n1 \\leq i \\leq N-1\n)\nAll input values are integers.\nInput\nThe input is given from Standard Input in the following format:\nN\nT_1\nV_1\nT_2\nV_2\n\\vdots\nT_N\nV_N\nOutput\nPrint the answer.\nSample Input 1\n4\r\n1 3\r\n3 1\r\n4 4\r\n7 1\nSample Output 1\n3\nAt each point in time, water is added as follows:\nTime\n1\n: Before adding, the humidifier has\n0\nliters. After adding\n3\nliters, it has\n3\nliters.\nTime\n3\n: Before adding, it has\n1\nliter. After adding\n1\nliter, it has\n2\nliters total.\nTime\n4\n: Before adding, it has\n1\nliter. After adding\n4\nliters, it has\n5\nliters total.\nTime\n7\n: Before adding, it has\n2\nliters. After adding\n1\nliter, it has\n3\nliters total.\nAfter finishing the addition at time\n7\n, the humidifier contains\n3\nliters. Thus, the answer is\n3\n.\nSample Input 2\n3\r\n1 8\r\n10 11\r\n21 5\nSample Output 2\n5\nSample Input 3\n10\r\n2 1\r\n22 10\r\n26 17\r\n29 2\r\n45 20\r\n47 32\r\n72 12\r\n75 1\r\n81 31\r\n97 7\nSample Output 3\n57",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "Print the answer.",
      "sample_cases": [
        {
          "input": "4\r\n1 3\r\n3 1\r\n4 4\r\n7 1",
          "output": "3"
        },
        {
          "input": "3\r\n1 8\r\n10 11\r\n21 5",
          "output": "5"
        },
        {
          "input": "10\r\n2 1\r\n22 10\r\n26 17\r\n29 2\r\n45 20\r\n47 32\r\n72 12\r\n75 1\r\n81 31\r\n97 7",
          "output": "57"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have a humidifier that starts empty, and you will add water to it several times at different times. Each time you add water, some water will evaporate over time, and you need to find out how much water is left in the humidifier after the last addition.",
        "key_concepts": [
          "variables",
          "loops",
          "basic math",
          "input/output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:12:48.832239"
    },
    {
      "url": "https://atcoder.jp/contests/abc382/tasks/abc382_a",
      "contest": "ABC 382",
      "title": "Daily Cookie",
      "problem_statement": "配点 :\n100\n点\n問題文\nN\n個の箱が横一列に並んでおり、そのうちのいくつかの箱にはクッキーが入っています。\n各箱の状態は長さ\nN\nの文字列\nS\nによって表されます。\n具体的には、左から\ni\\ (1\\leq i\\leq N)\n番目の箱は、\nS\nの\ni\n文字目が\n@\nのときクッキーが\n1\n枚入っており、\n.\nのとき空き箱です。\n高橋君は今からの\nD\n日間、一日一回ずつ、これらの箱のいずれかに入ったクッキーを\n1\n枚選んで食べます。\nN\n個の箱のうち、\nD\n日間が経過した後に空き箱であるものはいくつあるか求めてください。\n（この値は高橋君が各日でどのクッキーを選ぶかによらないことが証明できます。）\nなお、\nS\nには\n@\nが\nD\n個以上含まれることが保証されます。\n制約\n1\\leq D \\leq N \\leq 100\nN,D\nは整数\nS\nは\n@\nと\n.\nからなる長さ\nN\nの文字列\nS\nには\n@\nが\nD\n個以上含まれる\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nD\nS\n出力\nN\n個の箱のうち、\nD\n日間が経過した後に空き箱であるものの個数を出力せよ。\n入力例 1\n5 2\n.@@.@\n出力例 1\n4\n例えば、高橋君は以下のように行動する可能性があります。\n1\n日目：左から\n2,3,5\n番目の箱にクッキーが入っている。左から\n2\n番目の箱に入っているクッキーを選んで食べる。\n2\n日目：左から\n3,5\n番目の箱にクッキーが入っている。左から\n5\n番目の箱に入っているクッキーを選んで食べる。\n2\n日間が経過した後、左から\n3\n番目の箱にのみクッキーが入っている。よって、\n5\n個の箱のうち\n4\n箱が空き箱である。\n高橋君が各日で選ぶクッキーはこの例とは異なる可能性もありますが、いずれにせよ\n2\n日間が経過した後には\n4\n箱が空き箱です。\nよって答えは\n4\nです。\n入力例 2\n3 3\n@@@\n出力例 2\n3\n入力例 3\n10 4\n@@@.@@.@@.\n出力例 3\n7\nScore:\n100\npoints\nProblem Statement\nThere are\nN\nboxes arranged in a row, and some of these boxes contain cookies.\nThe state of these boxes is represented by a string\nS\nof length\nN\n.\nSpecifically, the\ni\n-th box\n(1\\leq i \\leq N)\nfrom the left contains one cookie if the\ni\n-th character of\nS\nis\n@\n, and is empty if it is\n.\n.\nOver the next\nD\ndays, Takahashi will choose and eat one cookie per day from among the cookies in these boxes.\nDetermine how many of the\nN\nboxes will be empty after\nD\ndays have passed.\n(It can be proved that this value does not depend on which cookies Takahashi chooses each day.)\nIt is guaranteed that\nS\ncontains at least\nD\noccurrences of\n@\n.\nConstraints\n1 \\leq D \\leq N \\leq 100\nN\nand\nD\nare integers.\nS\nis a string of length\nN\nconsisting of\n@\nand\n.\n.\nS\ncontains at least\nD\noccurrences of\n@\n.\nInput\nThe input is given from Standard Input in the following format:\nN\nD\nS\nOutput\nPrint the number of boxes that will be empty after\nD\ndays have passed among the\nN\nboxes.\nSample Input 1\n5 2\n.@@.@\nSample Output 1\n4\nFor example, Takahashi might act as follows:\nDay\n1\n: There are cookies in the 2nd, 3rd, and 5th boxes from the left. He chooses the cookie in the 2nd box to eat.\nDay\n2\n: There are cookies in the 3rd and 5th boxes. He chooses the cookie in the 5th box to eat.\nAfter two days have passed, only the 3rd box from the left contains a cookie. Therefore, four out of the five boxes are empty.\nEven though Takahashi might choose differently on each day than in this example, there will still be four empty boxes after two days.\nTherefore, the answer is\n4\n.\nSample Input 2\n3 3\n@@@\nSample Output 2\n3\nSample Input 3\n10 4\n@@@.@@.@@.\nSample Output 3\n7",
      "constraints": "1 \\leq D \\leq N \\leq 100NandDare integers.Sis a string of lengthNconsisting of@and..Scontains at leastDoccurrences of@.",
      "input_format": "Input format not specified",
      "output_format": "Print the number of boxes that will be empty afterDdays have passed among theNboxes.",
      "sample_cases": [
        {
          "input": "5 2\n.@@.@",
          "output": "4"
        },
        {
          "input": "3 3\n@@@",
          "output": "3"
        },
        {
          "input": "10 4\n@@@.@@.@@.",
          "output": "7"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have a row of boxes, some with cookies and some empty. After a certain number of days, you will eat one cookie from a box each day. We want to find out how many boxes will be empty after those days are over.",
        "key_concepts": [
          "Strings",
          "Loops",
          "Counting",
          "Conditionals"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:12:53.379420"
    },
    {
      "url": "https://atcoder.jp/contests/abc381/tasks/abc381_a",
      "contest": "ABC 381",
      "title": "11/22 String",
      "problem_statement": "配点 :\n150\n点\n問題文\nこの問題における 11/22 文字列の定義は C 問題および E 問題と同じです。\n文字列\nT\nが以下の条件を全て満たすとき、\nT\nを\n11/22 文字列\nと呼びます。\n|T|\nは奇数である。ここで、\n|T|\nは\nT\nの長さを表す。\n1\n文字目から\n\\frac{|T|+1}{2} - 1\n文字目までが\n1\nである。\n\\frac{|T|+1}{2}\n文字目が\n/\nである。\n\\frac{|T|+1}{2} + 1\n文字目から\n|T|\n文字目までが\n2\nである。\n例えば\n11/22\n,\n111/222\n,\n/\nは 11/22 文字列ですが、\n1122\n,\n1/22\n,\n11/2222\n,\n22/11\n,\n//2/2/211\nはそうではありません。\n1\n,\n2\n,\n/\nからなる長さ\nN\nの文字列\nS\nが与えられます。\nS\nが 11/22 文字列であるか判定してください。\n制約\n1 \\leq N \\leq 100\nS\nは\n1\n,\n2\n,\n/\nからなる長さ\nN\nの文字列\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nS\n出力\nS\nが 11/22 文字列であれば\nYes\nを、そうでなければ\nNo\nを出力せよ。\n入力例 1\n5\r\n11/22\n出力例 1\nYes\n11/22\nは問題文の 11/22 文字列の条件を満たします。\n入力例 2\n1\r\n/\n出力例 2\nYes\n/\nは問題文の 11/22 文字列の条件を満たします。\n入力例 3\n4\r\n1/22\n出力例 3\nNo\n1/22\nは問題文の 11/22 文字列の条件を満たしません。\n入力例 4\n5\r\n22/11\n出力例 4\nNo\nScore :\n150\npoints\nProblem Statement\nThe definition of an 11/22 string in this problem is the same as in Problems C and E.\nA string\nT\nis called an\n11/22 string\nwhen it satisfies all of the following conditions:\n|T|\nis odd. Here,\n|T|\ndenotes the length of\nT\n.\nThe\n1\n-st through\n(\\frac{|T|+1}{2} - 1)\n-th characters are all\n1\n.\nThe\n(\\frac{|T|+1}{2})\n-th character is\n/\n.\nThe\n(\\frac{|T|+1}{2} + 1)\n-th through\n|T|\n-th characters are all\n2\n.\nFor example,\n11/22\n,\n111/222\n, and\n/\nare 11/22 strings, but\n1122\n,\n1/22\n,\n11/2222\n,\n22/11\n, and\n//2/2/211\nare not.\nGiven a string\nS\nof length\nN\nconsisting of\n1\n,\n2\n, and\n/\n, determine whether\nS\nis an 11/22 string.\nConstraints\n1 \\leq N \\leq 100\nS\nis a string of length\nN\nconsisting of\n1\n,\n2\n, and\n/\n.\nInput\nThe input is given from Standard Input in the following format:\nN\nS\nOutput\nIf\nS\nis an 11/22 string, print\nYes\n; otherwise, print\nNo\n.\nSample Input 1\n5\r\n11/22\nSample Output 1\nYes\n11/22\nsatisfies the conditions for an 11/22 string in the problem statement.\nSample Input 2\n1\r\n/\nSample Output 2\nYes\n/\nsatisfies the conditions for an 11/22 string.\nSample Input 3\n4\r\n1/22\nSample Output 3\nNo\n1/22\ndoes not satisfy the conditions for an 11/22 string.\nSample Input 4\n5\r\n22/11\nSample Output 4\nNo",
      "constraints": "1 \\leq N \\leq 100Sis a string of lengthNconsisting of1,2, and/.",
      "input_format": "Input format not specified",
      "output_format": "IfSis an 11/22 string, printYes; otherwise, printNo.",
      "sample_cases": [
        {
          "input": "5\r\n11/22",
          "output": "Yes"
        },
        {
          "input": "1\r\n/",
          "output": "Yes"
        },
        {
          "input": "4\r\n1/22",
          "output": "No"
        },
        {
          "input": "5\r\n22/11",
          "output": "No"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You need to check if a string made of '1', '2', and '/' is an 11/22 string. An 11/22 string has an odd length, starts with '1's, has a '/' in the middle, and ends with '2's. If it follows these rules, print 'Yes'; otherwise, print 'No'.",
        "key_concepts": [
          "if-statements",
          "string manipulation",
          "length of strings",
          "basic condition checking"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:12:57.188682"
    },
    {
      "url": "https://atcoder.jp/contests/abc380/tasks/abc380_a",
      "contest": "ABC 380",
      "title": "123233",
      "problem_statement": "配点 :\n100\n点\n問題文\n6\n桁の正整数\nN\nが与えられます。\nこの整数が以下の条件を全て満たすか判定してください。\nN\nの各桁のうち、\n1\nは丁度\n1\nつである。\nN\nの各桁のうち、\n2\nは丁度\n2\nつである。\nN\nの各桁のうち、\n3\nは丁度\n3\nつである。\n制約\nN\nは\n100000 \\le N \\le 999999\nを満たす整数\n入力\n入力は以下の形式で標準入力から与えられる。\nN\n出力\nN\nが問題文中の条件を全て満たすなら\nYes\n、そうでないなら\nNo\nと\n1\n行に出力せよ。\n入力例 1\n123233\n出力例 1\nYes\n123233\nは問題文中の条件を満たすので、\nYes\nと出力します。\n入力例 2\n123234\n出力例 2\nNo\n123234\nは問題文中の条件を満たさないので、\nNo\nと出力します。\n入力例 3\n323132\n出力例 3\nYes\n入力例 4\n500000\n出力例 4\nNo\nScore :\n100\npoints\nProblem Statement\nYou are given a\n6\n-digit positive integer\nN\n.\nDetermine whether\nN\nsatisfies all of the following conditions.\nAmong the digits of\nN\n, the digit\n1\nappears exactly once.\nAmong the digits of\nN\n, the digit\n2\nappears exactly twice.\nAmong the digits of\nN\n, the digit\n3\nappears exactly three times.\nConstraints\nN\nis an integer satisfying\n100000 \\le N \\le 999999\n.\nInput\nThe input is given from Standard Input in the following format:\nN\nOutput\nPrint\nYes\nif\nN\nsatisfies all the conditions described in the problem statement, and\nNo\notherwise, in one line.\nSample Input 1\n123233\nSample Output 1\nYes\n123233\nsatisfies the conditions in the problem statement, so print\nYes\n.\nSample Input 2\n123234\nSample Output 2\nNo\n123234\ndoes not satisfy the conditions in the problem statement, so print\nNo\n.\nSample Input 3\n323132\nSample Output 3\nYes\nSample Input 4\n500000\nSample Output 4\nNo",
      "constraints": "Nis an integer satisfying100000 \\le N \\le 999999.",
      "input_format": "Input format not specified",
      "output_format": "PrintYesifNsatisfies all the conditions described in the problem statement, andNootherwise, in one line.",
      "sample_cases": [
        {
          "input": "123233",
          "output": "Yes"
        },
        {
          "input": "123234",
          "output": "No"
        },
        {
          "input": "323132",
          "output": "Yes"
        },
        {
          "input": "500000",
          "output": "No"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You are given a 6-digit number. Check if it has exactly one '1', two '2's, and three '3's in it. If it does, say 'Yes', otherwise say 'No'.",
        "key_concepts": [
          "if-statements",
          "counting characters",
          "basic input/output",
          "string manipulation"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:13:02.991936"
    },
    {
      "url": "https://atcoder.jp/contests/abc379/tasks/abc379_a",
      "contest": "ABC 379",
      "title": "Cyclic",
      "problem_statement": "配点 :\n100\n点\n問題文\n各桁が\n1\n以上\n9\n以下の整数である\n3\n桁の整数\nN\nが与えられます。\nN\nの\n100\nの位を\na\n、\n10\nの位を\nb\n、\n1\nの位を\nc\nとしたとき、\nb,c,a\nをこの順に並べた整数と\nc,a,b\nをこの順に並べた整数をそれぞれ出力してください。\n制約\nN\nは各桁が\n1\n以上\n9\n以下の整数である\n3\n桁の整数\n入力\n入力は以下の形式で標準入力から与えられる。\nN\n出力\nb,c,a\nをこの順に並べた整数と\nc,a,b\nをこの順に並べた整数をこの順で空白区切りで出力せよ。\n入力例 1\n379\n出力例 1\n793 937\n379\nの\n100\nの位は\n3\n、\n10\nの位は\n7\n、\n1\nの位は\n9\nです。よって、\n793\nと\n937\nをそれぞれ出力します。\n入力例 2\n919\n出力例 2\n199 991\n919\nの\n100\nの位は\n9\n、\n10\nの位は\n1\n、\n1\nの位は\n9\nです。よって、\n199\nと\n991\nをそれぞれ出力します。\nScore :\n100\npoints\nProblem Statement\nYou are given a three-digit integer\nN\nwhere each digit is an integer between\n1\nand\n9\n, inclusive.\nLet\na\n,\nb\n,\nc\nbe the hundreds, tens, ones digits of\nN\n, respectively. Print an integer formed by arranging\nb\n,\nc\n,\na\nin this order, and an integer formed by arranging\nc\n,\na\n,\nb\nin this order.\nConstraints\nN\nis a three-digit integer where each digit is an integer between\n1\nand\n9\n, inclusive.\nInput\nThe input is given from Standard Input in the following format:\nN\nOutput\nPrint two integers separated by a space in the following order: an integer formed by arranging\nb\n,\nc\n,\na\nin this order, and an integer formed by arranging\nc\n,\na\n,\nb\nin this order.\nSample Input 1\n379\nSample Output 1\n793 937\nThe hundreds, tens, ones digits of\n379\nare\n3\n,\n7\n,\n9\n, respectively, so print\n793\nand\n937\n.\nSample Input 2\n919\nSample Output 2\n199 991\nThe hundreds, tens, ones digits of\n919\nare\n9\n,\n1\n,\n9\n, respectively, so print\n199\nand\n991\n.",
      "constraints": "Nis a three-digit integer where each digit is an integer between1and9, inclusive.",
      "input_format": "Input format not specified",
      "output_format": "Print two integers separated by a space in the following order: an integer formed by arrangingb,c,ain this order, and an integer formed by arrangingc,a,bin this order.",
      "sample_cases": [
        {
          "input": "379",
          "output": "793 937"
        },
        {
          "input": "919",
          "output": "199 991"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You are given a three-digit number made of digits from 1 to 9. You need to rearrange the digits in two different ways and print the new numbers you create from those arrangements.",
        "key_concepts": [
          "String manipulation",
          "Indexing",
          "Basic input/output",
          "Integer conversion"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:13:07.114668"
    },
    {
      "url": "https://atcoder.jp/contests/abc378/tasks/abc378_a",
      "contest": "ABC 378",
      "title": "Pairing",
      "problem_statement": "配点 :\n100\n点\n問題文\n4\n個のボールがあり、\ni\n個目のボールの色は\nA_i\nです。\n同じ色のボールを\n2\nつ選び両方捨てるという操作を最大何回行えるか求めてください。\n制約\nA_1,A_2,A_3,A_4\nはそれぞれ\n1\n以上\n4\n以下の整数\n入力\n入力は以下の形式で標準入力から与えられる。\nA_1\nA_2\nA_3\nA_4\n出力\n操作回数の最大値を整数として出力せよ。\n入力例 1\n2 1 2 1\n出力例 1\n2\n1\n個目のボールと\n3\n個目のボールはどちらも色が\n2\nなので、\n1\n個目のボールと\n3\n個目のボールを共に捨てる操作を行えます。\n次に、\n2\n個目のボールと\n4\n個目のボールはどちらも色が\n1\nなので、\n2\n個目のボールと\n4\n個目のボールを共に捨てる操作を行えます。\n合計で\n2\n回操作を行えます。\n入力例 2\n4 4 4 1\n出力例 2\n1\n入力例 3\n1 2 3 4\n出力例 3\n0\n操作を一度も行えない場合もあります。\nScore :\n100\npoints\nProblem Statement\nThere are four balls, and the color of the\ni\n-th ball is\nA_i\n.\nFind the maximum number of times you can perform this operation: choose two balls of the same color and discard both.\nConstraints\nEach of\nA_1, A_2, A_3, A_4\nis an integer between\n1\nand\n4\n, inclusive.\nInput\nThe input is given from Standard Input in the following format:\nA_1\nA_2\nA_3\nA_4\nOutput\nPrint the maximum number of times the operation can be performed as an integer.\nSample Input 1\n2 1 2 1\nSample Output 1\n2\nThe first and third balls both have color\n2\n, so you can perform the operation to discard the first and third balls together.\nNext, the second and fourth balls both have color\n1\n, so you can perform the operation to discard the second and fourth balls together.\nHence, you can perform a total of two operations.\nSample Input 2\n4 4 4 1\nSample Output 2\n1\nSample Input 3\n1 2 3 4\nSample Output 3\n0\nThere are cases where you cannot perform the operation even once.",
      "constraints": "Each ofA_1, A_2, A_3, A_4is an integer between1and4, inclusive.",
      "input_format": "Input format not specified",
      "output_format": "Print the maximum number of times the operation can be performed as an integer.",
      "sample_cases": [
        {
          "input": "2 1 2 1",
          "output": "2"
        },
        {
          "input": "4 4 4 1",
          "output": "1"
        },
        {
          "input": "1 2 3 4",
          "output": "0"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have four balls, each with a color represented by a number. Your goal is to find out how many pairs of balls you can remove if you can only remove two balls of the same color at a time.",
        "key_concepts": [
          "arrays or lists",
          "counting",
          "basic math",
          "loops"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:13:10.334729"
    },
    {
      "url": "https://atcoder.jp/contests/abc377/tasks/abc377_a",
      "contest": "ABC 377",
      "title": "Rearranging ABC",
      "problem_statement": "配点 :\n100\n点\n問題文\n長さ\n3\nの英大文字からなる文字列\nS\nが与えられます。\nS\nの各文字を並び替えることで\nS\nを文字列\nABC\nと一致させることができるか判定してください。\n制約\nS\nは英大文字からなる長さ\n3\nの文字列\n入力\n入力は以下の形式で標準入力から与えられる。\nS\n出力\nS\nの各文字を並び替えることで文字列\nABC\nと一致させることができるなら\nYes\nを、そうでないなら\nNo\nを出力せよ。\n入力例 1\nBAC\n出力例 1\nYes\nS\nの\n1\n文字目と\nS\nの\n2\n文字目を入れ替えることで\nABC\nと一致させることができます。\n入力例 2\nAAC\n出力例 2\nNo\nどのように並び替えても\nS\nを\nABC\nと一致させることはできません。\n入力例 3\nABC\n出力例 3\nYes\n入力例 4\nARC\n出力例 4\nNo\nScore :\n100\npoints\nProblem Statement\nYou are given a string\nS\nof length\n3\nconsisting of uppercase English letters.\nDetermine whether it is possible to rearrange the characters in\nS\nto make it match the string\nABC\n.\nConstraints\nS\nis a string of length\n3\nconsisting of uppercase English letters.\nInput\nThe input is given from Standard Input in the following format:\nS\nOutput\nPrint\nYes\nif it is possible to rearrange the characters in\nS\nto make it match the string\nABC\n, and\nNo\notherwise.\nSample Input 1\nBAC\nSample Output 1\nYes\nYou can make\nS\nmatch\nABC\nby swapping the first and second characters of\nS\n.\nSample Input 2\nAAC\nSample Output 2\nNo\nYou cannot make\nS\nmatch\nABC\nno matter how you rearrange the characters.\nSample Input 3\nABC\nSample Output 3\nYes\nSample Input 4\nARC\nSample Output 4\nNo",
      "constraints": "Sis a string of length3consisting of uppercase English letters.",
      "input_format": "Input format not specified",
      "output_format": "PrintYesif it is possible to rearrange the characters inSto make it match the stringABC, andNootherwise.",
      "sample_cases": [
        {
          "input": "BAC",
          "output": "Yes"
        },
        {
          "input": "AAC",
          "output": "No"
        },
        {
          "input": "ABC",
          "output": "Yes"
        },
        {
          "input": "ARC",
          "output": "No"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You are given a 3-letter string made of uppercase letters. Your task is to check if you can rearrange these letters to form the word 'ABC'.",
        "key_concepts": [
          "if-statements",
          "string manipulation",
          "comparison"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:13:12.802115"
    },
    {
      "url": "https://atcoder.jp/contests/abc376/tasks/abc376_a",
      "contest": "ABC 376",
      "title": "Candy Button",
      "problem_statement": "配点 :\n150\n点\n問題文\n不思議なボタンがあります。\r\nこのボタンを押すと飴を\n1\nつもらえますが、前回飴をもらってからの経過時間が\nC\n秒未満である場合はもらえません。\n高橋君はこのボタンを\nN\n回押してみることにしました。\ni\n回目にボタンを押すのは今から\nT_i\n秒後です。\n高橋君は何個の飴をもらうことができますか？\n制約\n1\\leq N \\leq 100\n1\\leq C\\leq 1000\n0\\leq T_1 < T_2 < \\dots < T_N \\leq 1000\n入力は全て整数\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nC\nT_1\nT_2\n\\dots\nT_N\n出力\n高橋君がもらうことのできる飴の個数を出力せよ。\n入力例 1\n6 5\r\n1 3 7 8 10 12\n出力例 1\n3\n高橋君はボタンを\n6\n回押します。\n1\n回目（今から\n1\n秒後）：初めてボタンを押すときは必ず飴を\n1\nつもらえます。\n2\n回目（今から\n3\n秒後）：前回飴をもらってからの経過時間が\n3-1=2<C\n秒なので、飴はもらえません。\n3\n回目（今から\n7\n秒後）：前回飴をもらってからの経過時間が\n7-1=6\\geq C\n秒なので、飴を\n1\nつもらえます。\n4\n回目（今から\n8\n秒後）：前回飴をもらってからの経過時間が\n8-7=1<C\n秒なので、飴はもらえません。\n5\n回目（今から\n10\n秒後）：前回飴をもらってからの経過時間が\n10-7=3<C\n秒なので、飴はもらえません。\n6\n回目（今から\n12\n秒後）：前回飴をもらってからの経過時間が\n12-7=5\\geq C\n秒なので、飴を\n1\nつもらえます。\nよって、高橋君は飴を\n3\n個もらうことができます。\n入力例 2\n3 2\r\n0 2 4\n出力例 2\n3\n入力例 3\n10 3\r\n0 3 4 6 9 12 15 17 19 20\n出力例 3\n7\nScore :\n150\npoints\nProblem Statement\nThere is a mysterious button.\r\nWhen you press this button, you receive one candy, unless less than\nC\nseconds have elapsed since you last received a candy.\nTakahashi decided to press this button\nN\ntimes.\r\nHe will press the button for the\ni\n-th time\nT_i\nseconds from now.\nHow many candies will he receive?\nConstraints\n1 \\leq N \\leq 100\n1 \\leq C \\leq 1000\n0 \\leq T_1 < T_2 < \\dots < T_N \\leq 1000\nAll input values are integers.\nInput\nThe input is given from Standard Input in the following format:\nN\nC\nT_1\nT_2\n\\dots\nT_N\nOutput\nPrint the number of candies that Takahashi will receive.\nSample Input 1\n6 5\r\n1 3 7 8 10 12\nSample Output 1\n3\nTakahashi will press the button six times.\n1st press (\n1\nsecond from now): You always receive a candy when pressing the button for the first time.\n2nd press (\n3\nseconds from now):\n3 - 1 = 2 < C\nseconds have elapsed since he last received a candy, so he does not receive a candy.\n3rd press (\n7\nseconds from now):\n7 - 1 = 6 \\geq C\nseconds have elapsed since he last received a candy, so he receives a candy.\n4th press (\n8\nseconds from now):\n8 - 7 = 1 < C\nsecond has elapsed since he last received a candy, so he does not receive a candy.\n5th press (\n10\nseconds from now):\n10 - 7 = 3 < C\nseconds have elapsed since he last received a candy, so he does not receive a candy.\n6th press (\n12\nseconds from now):\n12 - 7 = 5 \\geq C\nseconds have elapsed since he last received a candy, so he receives a candy.\nTherefore, he receives three candies.\nSample Input 2\n3 2\r\n0 2 4\nSample Output 2\n3\nSample Input 3\n10 3\r\n0 3 4 6 9 12 15 17 19 20\nSample Output 3\n7",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "Print the number of candies that Takahashi will receive.",
      "sample_cases": [
        {
          "input": "6 5\r\n1 3 7 8 10 12",
          "output": "3"
        },
        {
          "input": "3 2\r\n0 2 4",
          "output": "3"
        },
        {
          "input": "10 3\r\n0 3 4 6 9 12 15 17 19 20",
          "output": "7"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have a button that gives you a candy when you press it. However, you can only get a candy if a certain amount of time has passed since you last got one. You will press the button multiple times, and you need to count how many candies you receive.",
        "key_concepts": [
          "if-statements",
          "loops",
          "basic math",
          "input/output handling"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:13:16.682480"
    },
    {
      "url": "https://atcoder.jp/contests/abc375/tasks/abc375_a",
      "contest": "ABC 375",
      "title": "Seats",
      "problem_statement": "配点 :\n100\n点\n問題文\nN\n個の座席が並んでおり、座席には\n1, 2, \\ldots, N\nの番号が付けられています。\n座席の状態は\n#\n,\n.\nからなる長さ\nN\nの文字列\nS\nによって与えられます。\nS\nの\ni\n文字目が\n#\nのとき座席\ni\nには人が座っていることを表し、\nS\nの\ni\n文字目が\n.\nのとき座席\ni\nには人が座っていないことを表します。\n1\n以上\nN - 2\n以下の整数\ni\nであって、以下の条件を満たすものの個数を求めてください。\n座席\ni, i + 2\nには人が座っており、座席\ni + 1\nには人が座っていない\n制約\nN\nは\n1\n以上\n2 \\times 10^5\n以下の整数\nS\nは\n#\n,\n.\nからなる長さ\nN\nの文字列\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nS\n出力\n答えを出力せよ。\n入力例 1\n6\r\n#.##.#\n出力例 1\n2\ni = 1, 4\nが条件を満たすので、答えは\n2\nです。\n入力例 2\n1\r\n#\n出力例 2\n0\n入力例 3\n9\r\n##.#.#.##\n出力例 3\n3\nScore :\n100\npoints\nProblem Statement\nThere are\nN\nseats in a row, numbered\n1, 2, \\ldots, N\n.\nThe state of the seats is given by a string\nS\nof length\nN\nconsisting of\n#\nand\n.\n. If the\ni\n-th character of\nS\nis\n#\n, it means seat\ni\nis occupied; if it is\n.\n, seat\ni\nis unoccupied.\nFind the number of integers\ni\nbetween\n1\nand\nN - 2\n, inclusive, that satisfy the following condition:\nSeats\ni\nand\ni + 2\nare occupied, and seat\ni + 1\nis unoccupied.\nConstraints\nN\nis an integer satisfying\n1 \\leq N \\leq 2 \\times 10^5\n.\nS\nis a string of length\nN\nconsisting of\n#\nand\n.\n.\nInput\nThe input is given from Standard Input in the following format:\nN\nS\nOutput\nPrint the answer.\nSample Input 1\n6\r\n#.##.#\nSample Output 1\n2\ni = 1\nand\n4\nsatisfy the condition, so the answer is\n2\n.\nSample Input 2\n1\r\n#\nSample Output 2\n0\nSample Input 3\n9\r\n##.#.#.##\nSample Output 3\n3",
      "constraints": "Nis an integer satisfying1 \\leq N \\leq 2 \\times 10^5.Sis a string of lengthNconsisting of#and..",
      "input_format": "Input format not specified",
      "output_format": "Print the answer.",
      "sample_cases": [
        {
          "input": "6\r\n#.##.#",
          "output": "2"
        },
        {
          "input": "1\r\n#",
          "output": "0"
        },
        {
          "input": "9\r\n##.#.#.##",
          "output": "3"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have a row of seats that can either be occupied or empty. Your task is to count how many times there is a person sitting in seat i and seat i + 2, with an empty seat in between (seat i + 1).",
        "key_concepts": [
          "if-statements",
          "loops",
          "string manipulation",
          "counting occurrences"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:13:20.689162"
    },
    {
      "url": "https://atcoder.jp/contests/abc374/tasks/abc374_a",
      "contest": "ABC 374",
      "title": "Takahashi san 2",
      "problem_statement": "配点 :\n100\n点\n問題文\nキーエンスでは、役割や年齢、立場の違いに関係なく「さん」付けして呼ぶという文化があります。\n英小文字のみからなる文字列\nS\nが与えられます。\nS\nが\nsan\nで終わっているならば\nYes\nを、終わっていないならば\nNo\nを出力してください。\n制約\nS\nは英小文字のみからなる長さ\n4\n以上\n30\n以下の文字列\n入力\n入力は以下の形式で標準入力から与えられる。\nS\n出力\nS\nが\nsan\nで終わっているならば\nYes\nを、終わっていないならば\nNo\nを出力せよ。\n入力例 1\ntakahashisan\n出力例 1\nYes\n文字列\nS=\ntakahashisan\nは\nsan\nで終わっているため、\nYes\nを出力します。\n入力例 2\naokikun\n出力例 2\nNo\n文字列\nS=\naokikun\nは\nsan\nで終わっていないため、\nNo\nを出力します。\nScore :\n100\npoints\nProblem Statement\nKEYENCE has a culture of addressing everyone with the suffix \"-san,\" regardless of roles, age, or positions.\nYou are given a string\nS\nconsisting of lowercase English letters.\nIf\nS\nends with\nsan\n, print\nYes\n; otherwise, print\nNo\n.\nConstraints\nS\nis a string of length between\n4\nand\n30\n, inclusive, consisting of lowercase English letters.\nInput\nThe input is given from Standard Input in the following format:\nS\nOutput\nIf\nS\nends with\nsan\n, print\nYes\n; otherwise, print\nNo\n.\nSample Input 1\ntakahashisan\nSample Output 1\nYes\nThe string\nS=\ntakahashisan\nends with\nsan\n, so print\nYes\n.\nSample Input 2\naokikun\nSample Output 2\nNo\nThe string\nS=\naokikun\ndoes not end with\nsan\n, so print\nNo\n.",
      "constraints": "Sis a string of length between4and30, inclusive, consisting of lowercase English letters.",
      "input_format": "Input format not specified",
      "output_format": "IfSends withsan, printYes; otherwise, printNo.",
      "sample_cases": [
        {
          "input": "takahashisan",
          "output": "Yes"
        },
        {
          "input": "aokikun",
          "output": "No"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You need to check if a given word ends with 'san'. If it does, you will print 'Yes'. If it doesn't, you will print 'No'.",
        "key_concepts": [
          "if-statements",
          "string manipulation",
          "output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:13:23.849730"
    },
    {
      "url": "https://atcoder.jp/contests/abc373/tasks/abc373_a",
      "contest": "ABC 373",
      "title": "September",
      "problem_statement": "配点 :\n100\n点\n問題文\n英小文字からなる\n12\n個の文字列\nS_1,S_2,\\ldots,S_{12}\nがあります。\nS_i\nの長さが\ni\nであるような整数\ni\n(1 \\leq i \\leq 12)\nがいくつあるか求めてください。\n制約\nS_i\nは英小文字からなる長さ\n1\n以上\n100\n以下の文字列である。\n(1 \\leq i \\leq 12)\n入力\n入力は以下の形式で標準入力から与えられる。\nS_1\nS_2\n\\vdots\nS_{12}\n出力\nS_i\nの長さが\ni\nであるような整数\ni\n(1 \\leq i \\leq 12)\nがいくつあるか出力せよ。\n入力例 1\njanuary\r\nfebruary\r\nmarch\r\napril\r\nmay\r\njune\r\njuly\r\naugust\r\nseptember\r\noctober\r\nnovember\r\ndecember\n出力例 1\n1\nS_i\nの長さが\ni\nであるような整数\ni\nは\n9\nの\n1\nつのみです。よって、\n1\nと出力します。\n入力例 2\nve\r\ninrtfa\r\nnpccxva\r\ndjiq\r\nlmbkktngaovl\r\nmlfiv\r\nfmbvcmuxuwggfq\r\nqgmtwxmb\r\njii\r\nts\r\nbfxrvs\r\neqvy\n出力例 2\n2\nS_i\nの長さが\ni\nであるような整数\ni\nは\n4,8\nの\n2\nつです。よって、\n2\nと出力します。\nScore :\n100\npoints\nProblem Statement\nThere are\n12\nstrings\nS_1, S_2, \\ldots, S_{12}\nconsisting of lowercase English letters.\nFind how many integers\ni\n(1 \\leq i \\leq 12)\nsatisfy that the length of\nS_i\nis\ni\n.\nConstraints\nEach\nS_i\nis a string of length between\n1\nand\n100\n, inclusive, consisting of lowercase English letters.\n(1 \\leq i \\leq 12)\nInput\nThe input is given from Standard Input in the following format:\nS_1\nS_2\n\\vdots\nS_{12}\nOutput\nPrint the number of integers\ni\n(1 \\leq i \\leq 12)\nsuch that the length of\nS_i\nis\ni\n.\nSample Input 1\njanuary\r\nfebruary\r\nmarch\r\napril\r\nmay\r\njune\r\njuly\r\naugust\r\nseptember\r\noctober\r\nnovember\r\ndecember\nSample Output 1\n1\nThere is only one integer\ni\nsuch that the length of\nS_i\nis\ni\n:\n9\n. Thus, print\n1\n.\nSample Input 2\nve\r\ninrtfa\r\nnpccxva\r\ndjiq\r\nlmbkktngaovl\r\nmlfiv\r\nfmbvcmuxuwggfq\r\nqgmtwxmb\r\njii\r\nts\r\nbfxrvs\r\neqvy\nSample Output 2\n2\nThere are two integers\ni\nsuch that the length of\nS_i\nis\ni\n:\n4\nand\n8\n. Thus, print\n2\n.",
      "constraints": "EachS_iis a string of length between1and100, inclusive, consisting of lowercase English letters.(1 \\leq i \\leq 12)",
      "input_format": "Input format not specified",
      "output_format": "Print the number of integersi(1 \\leq i \\leq 12)such that the length ofS_iisi.",
      "sample_cases": [
        {
          "input": "january\r\nfebruary\r\nmarch\r\napril\r\nmay\r\njune\r\njuly\r\naugust\r\nseptember\r\noctober\r\nnovember\r\ndecember",
          "output": "1"
        },
        {
          "input": "ve\r\ninrtfa\r\nnpccxva\r\ndjiq\r\nlmbkktngaovl\r\nmlfiv\r\nfmbvcmuxuwggfq\r\nqgmtwxmb\r\njii\r\nts\r\nbfxrvs\r\neqvy",
          "output": "2"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have 12 words, and each word is numbered from 1 to 12. Your task is to count how many words have a length that matches their number (for example, the first word should have 1 letter, the second word should have 2 letters, and so on).",
        "key_concepts": [
          "loops",
          "if-statements",
          "basic string manipulation",
          "counting"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:13:27.742023"
    },
    {
      "url": "https://atcoder.jp/contests/abc372/tasks/abc372_a",
      "contest": "ABC 372",
      "title": "delete .",
      "problem_statement": "配点 :\n100\n点\n問題文\n英小文字および\n.\nからなる文字列\nS\nが与えられます。\nS\nから\n.\nを全て削除した文字列を求めてください。\n制約\nS\nは英小文字および\n.\nからなる長さ\n1\n以上\n100\n以下の文字列\n入力\n入力は以下の形式で標準入力から与えられる。\nS\n出力\nS\nから\n.\nを全て削除した文字列を出力せよ。\n入力例 1\n.v.\n出力例 1\nv\n.v.\nから\n.\nを全て削除すると\nv\nになります。したがって、\nv\nを出力してください。\n入力例 2\nchokudai\n出力例 2\nchokudai\nS\nに\n.\nが含まれない場合もあります。\n入力例 3\n...\n出力例 3\nS\nの文字が全て\n.\nである場合もあります。\nScore :\n100\npoints\nProblem Statement\nYou are given a string\nS\nconsisting of lowercase English letters and\n.\n.\r\nFind the string obtained by removing all\n.\nfrom\nS\n.\nConstraints\nS\nis a string of length between\n1\nand\n100\n, inclusive, consisting of lowercase English letters and\n.\n.\nInput\nThe input is given from Standard Input in the following format:\nS\nOutput\nPrint the string obtained by removing all\n.\nfrom\nS\n.\nSample Input 1\n.v.\nSample Output 1\nv\nRemoving all\n.\nfrom\n.v.\nyields\nv\n, so print\nv\n.\nSample Input 2\nchokudai\nSample Output 2\nchokudai\nThere are cases where\nS\ndoes not contain\n.\n.\nSample Input 3\n...\nSample Output 3\nThere are also cases where all characters in\nS\nare\n.\n.",
      "constraints": "Sis a string of length between1and100, inclusive, consisting of lowercase English letters and..",
      "input_format": "Input format not specified",
      "output_format": "Print the string obtained by removing all.fromS.",
      "sample_cases": [
        {
          "input": ".v.",
          "output": "v"
        },
        {
          "input": "chokudai",
          "output": "chokudai"
        },
        {
          "input": "...",
          "output": ""
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You are given a string that includes lowercase letters and the dot character (.). Your task is to create a new string by removing all the dots from the original string.",
        "key_concepts": [
          "string manipulation",
          "input and output",
          "loops",
          "conditional statements"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:13:31.123904"
    },
    {
      "url": "https://atcoder.jp/contests/abc371/tasks/abc371_a",
      "contest": "ABC 371",
      "title": "Jiro",
      "problem_statement": "配点 :\n150\n点\n問題文\nA\n,\nB\n,\nC\nの三兄弟がいます。この\n3\n人の年齢関係は、\n3\nつの文字\nS_{\\mathrm{AB}},S_{\\mathrm{AC}},S_{\\mathrm{BC}}\nによって与えられ、それぞれ以下を意味します。\nS_{\\mathrm{AB}}\nが\n<\nの場合\nA\nは\nB\nより年下であり、\n>\nの場合\nA\nは\nB\nより年上である。\nS_{\\mathrm{AC}}\nが\n<\nの場合\nA\nは\nC\nより年下であり、\n>\nの場合\nA\nは\nC\nより年上である。\nS_{\\mathrm{BC}}\nが\n<\nの場合\nB\nは\nC\nより年下であり、\n>\nの場合\nB\nは\nC\nより年上である。\n三兄弟の次男、つまり二番目に年上の人は誰ですか？\n制約\nS_{\\mathrm{AB}},S_{\\mathrm{AC}},S_{\\mathrm{BC}}\nはそれぞれ\n<\nまたは\n>\n入力に矛盾は含まれない。つまり、与えられた大小関係を全て満たす年齢関係が必ず存在する入力のみが与えられる。\n入力\n入力は以下の形式で標準入力から与えられる。\nS_{\\mathrm{AB}}\nS_{\\mathrm{AC}}\nS_{\\mathrm{BC}}\n出力\n三兄弟の次男、つまり二番目に年上の人の名前を出力せよ。\n入力例 1\n< < <\n出力例 1\nB\nA\nが\nB\nより年下であり、\nB\nが\nC\nより年下であることから、\nC\nが長男、\nB\nが次男、\nA\nが三男であることがわかります。よって答えは\nB\nです。\n入力例 2\n< < >\n出力例 2\nC\nScore :\n150\npoints\nProblem Statement\nThere are three brothers named\nA\n,\nB\n, and\nC\n. The age relationships among them are given by three characters\nS_{\\mathrm{AB}}, S_{\\mathrm{AC}}, S_{\\mathrm{BC}}\n, which mean the following:\nIf\nS_{\\mathrm{AB}}\nis\n<\n, then\nA\nis younger than\nB\n; if it is\n>\n, then\nA\nis older than\nB\n.\nIf\nS_{\\mathrm{AC}}\nis\n<\n, then\nA\nis younger than\nC\n; if it is\n>\n, then\nA\nis older than\nC\n.\nIf\nS_{\\mathrm{BC}}\nis\n<\n, then\nB\nis younger than\nC\n; if it is\n>\n, then\nB\nis older than\nC\n.\nWho is the middle brother, that is, the second oldest among the three?\nConstraints\nEach of\nS_{\\mathrm{AB}}, S_{\\mathrm{AC}}, S_{\\mathrm{BC}}\nis\n<\nor\n>\n.\nThe input contains no contradictions; that is, there always exists an age relationship that satisfies all given inequalities.\nInput\nThe input is given from Standard Input in the following format:\nS_{\\mathrm{AB}}\nS_{\\mathrm{AC}}\nS_{\\mathrm{BC}}\nOutput\nPrint the name of the middle brother, that is, the second oldest among the three.\nSample Input 1\n< < <\nSample Output 1\nB\nSince\nA\nis younger than\nB\n, and\nB\nis younger than\nC\n, we can determine that\nC\nis the oldest,\nB\nis the middle, and\nA\nis the youngest. Hence, the answer is\nB\n.\nSample Input 2\n< < >\nSample Output 2\nC",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "Print the name of the middle brother, that is, the second oldest among the three.",
      "sample_cases": [
        {
          "input": "< < <",
          "output": "B"
        },
        {
          "input": "< < >",
          "output": "C"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have three brothers named A, B, and C. You know who is older or younger based on three symbols (< or >). Your task is to find out which brother is the second oldest.",
        "key_concepts": [
          "if-statements",
          "comparison operators",
          "conditional logic"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:13:34.508869"
    },
    {
      "url": "https://atcoder.jp/contests/abc370/tasks/abc370_a",
      "contest": "ABC 370",
      "title": "Raise Both Hands",
      "problem_statement": "配点 :\n100\n点\n問題文\n高橋君はたこ焼きを作ってすぬけ君に振る舞うことにしました。高橋君はすぬけ君に、たこ焼きを食べたいならば左手のみを挙げて、そうでないならば右手のみを挙げるよう指示しました。\nすぬけ君が挙げた手の情報は整数\nL, R\nによって与えられます。\r\nすぬけ君は\nL = 1\nのとき、またそのときに限り左手を挙げており、\nR = 1\nのとき、またそのときに限り右手を挙げています。すぬけ君は指示に従わず、両手を挙げることも手を挙げないこともあります。\nすぬけ君が片方の手のみを挙げている場合、すぬけ君がたこ焼きを食べたいならば\nYes\nを、そうでないならば\nNo\nを出力してください。すぬけ君が両手を挙げているか、手を挙げていないときは\nInvalid\nと出力してください。\nただし、すぬけ君が片方の手のみを挙げている場合は必ず指示に従った行動を取っているものとします。\n制約\nL, R\nは\n0\nまたは\n1\n入力\n入力は以下の形式で標準入力から与えられる。\nL\nR\n出力\n問題文の指示に従って\nYes\n,\nNo\n,\nInvalid\nのいずれかを出力せよ。\n入力例 1\n1 0\n出力例 1\nYes\nすぬけ君はたこ焼きを食べたいので左手のみを挙げています。\n入力例 2\n1 1\n出力例 2\nInvalid\nすぬけ君は両手を挙げています。\nScore :\n100\npoints\nProblem Statement\nTakahashi decided to make takoyaki (octopus balls) and serve it to Snuke. Takahashi instructed Snuke to raise only his left hand if he wants to eat takoyaki, and only his right hand otherwise.\nYou are given the information about which hand Snuke is raising as two integers\nL\nand\nR\n.\r\nHe is raising his left hand if and only if\nL = 1\n, and raising his right hand if and only if\nR = 1\n. He might not follow the instructions and could raise both hands or not raise any hand at all.\nIf Snuke is raising only one hand, print\nYes\nif he wants to eat takoyaki, and\nNo\nif he does not. If he is raising both hands or not raising any hand, print\nInvalid\n.\nAssume that if Snuke is raising only one hand, he is always following the instructions.\nConstraints\nEach of\nL\nand\nR\nis\n0\nor\n1\n.\nInput\nThe input is given from Standard Input in the following format:\nL\nR\nOutput\nPrint\nYes\n,\nNo\n, or\nInvalid\naccording to the instructions in the problem statement.\nSample Input 1\n1 0\nSample Output 1\nYes\nSnuke wants to eat takoyaki, so he is raising only his left hand.\nSample Input 2\n1 1\nSample Output 2\nInvalid\nSnuke is raising both hands.",
      "constraints": "Each ofLandRis0or1.",
      "input_format": "Input format not specified",
      "output_format": "PrintYes,No, orInvalidaccording to the instructions in the problem statement.",
      "sample_cases": [
        {
          "input": "1 0",
          "output": "Yes"
        },
        {
          "input": "1 1",
          "output": "Invalid"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You need to check which hand Snuke is raising to decide if he wants to eat takoyaki. If he raises only his left hand, he wants to eat it, and we print 'Yes'. If he raises only his right hand, we print 'No'. If he raises both hands or none, we print 'Invalid'.",
        "key_concepts": [
          "if-statements",
          "input and output",
          "conditional logic"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:13:37.717371"
    },
    {
      "url": "https://atcoder.jp/contests/abc369/tasks/abc369_a",
      "contest": "ABC 369",
      "title": "369",
      "problem_statement": "配点 :\n100\n点\n問題文\n整数\nA,B\nが与えられます。\n以下の条件を満たす整数\nx\nが何通りあるか求めてください。\n条件：\n3\nつの整数\nA,B,x\nをうまく並べることで、等差数列を作ることができる。\nなお、\n3\nつの整数\np,q,r\nをこの順に並べた列が等差数列であるとは、\nq-p\nが\nr-q\nと一致することをいいます。\n制約\n1\\leq A,B \\leq 100\n入力は全て整数\n入力\n入力は以下の形式で標準入力から与えられる。\nA\nB\n出力\n問題文中の条件を満たす整数\nx\nが何通りあるかを出力せよ。\r\nなお、答えは有限であることが証明できる。\n入力例 1\n5 7\n出力例 1\n3\n以下のように、\nx=3,6,9\nはいずれも条件を満たします。\nx=3\nのとき、例えば\nx,A,B\nと並べることで等差数列\n3,5,7\nを作ることができます。\nx=6\nのとき、例えば\nB,x,A\nと並べることで等差数列\n7,6,5\nを作ることができます。\nx=9\nのとき、例えば\nA,B,x\nと並べることで等差数列\n5,7,9\nを作ることができます。\n逆に、これ以外に条件を満たす\nx\nは存在しません。\r\nよって答えは\n3\nです。\n入力例 2\n6 1\n出力例 2\n2\nx=-4,11\nのみが条件を満たします。\n入力例 3\n3 3\n出力例 3\n1\nx=3\nのみが条件を満たします。\nScore :\n100\npoints\nProblem Statement\nYou are given two integers\nA\nand\nB\n.\nHow many integers\nx\nsatisfy the following condition?\nCondition: It is possible to arrange the three integers\nA\n,\nB\n, and\nx\nin some order to form an arithmetic sequence.\nA sequence of three integers\np\n,\nq\n, and\nr\nin this order is an arithmetic sequence if and only if\nq-p\nis equal to\nr-q\n.\nConstraints\n1 \\leq A,B \\leq 100\nAll input values are integers.\nInput\nThe input is given from Standard Input in the following format:\nA\nB\nOutput\nPrint the number of integers\nx\nthat satisfy the condition in the problem statement.\r\nIt can be proved that the answer is finite.\nSample Input 1\n5 7\nSample Output 1\n3\nThe integers\nx=3,6,9\nall satisfy the condition as follows:\nWhen\nx=3\n, for example, arranging\nx,A,B\nforms the arithmetic sequence\n3,5,7\n.\nWhen\nx=6\n, for example, arranging\nB,x,A\nforms the arithmetic sequence\n7,6,5\n.\nWhen\nx=9\n, for example, arranging\nA,B,x\nforms the arithmetic sequence\n5,7,9\n.\nConversely, there are no other values of\nx\nthat satisfy the condition.\r\nTherefore, the answer is\n3\n.\nSample Input 2\n6 1\nSample Output 2\n2\nOnly\nx=-4\nand\n11\nsatisfy the condition.\nSample Input 3\n3 3\nSample Output 3\n1\nOnly\nx=3\nsatisfies the condition.",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "Print the number of integersxthat satisfy the condition in the problem statement.\r\nIt can be proved that the answer is finite.",
      "sample_cases": [
        {
          "input": "5 7",
          "output": "3"
        },
        {
          "input": "6 1",
          "output": "2"
        },
        {
          "input": "3 3",
          "output": "1"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have two numbers, A and B. You need to find out how many different numbers, x, can be arranged with A and B to form a sequence where the difference between the first and second number is the same as the difference between the second and third number.",
        "key_concepts": [
          "Basic arithmetic",
          "Condition checking",
          "Looping through possible values",
          "Understanding sequences"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:13:41.198193"
    },
    {
      "url": "https://atcoder.jp/contests/abc368/tasks/abc368_a",
      "contest": "ABC 368",
      "title": "Cut",
      "problem_statement": "配点 :\n100\n点\n問題文\nN\n枚からなるカードの山があり、上から\ni\n枚目のカードには整数\nA_i\nが書かれています。\n山の下から\nK\n枚のカードを取り出し、順序を保ったまま山の一番上に乗せました。\nこの操作後の山の上から順に、カードに書かれた整数を出力してください。\n制約\n1 \\leq K < N \\leq 100\n1 \\leq A_i \\leq 100\n入力は全て整数\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nK\nA_1\nA_2\n\\ldots\nA_N\n出力\n操作後の山の上から\ni\n枚目のカードに書かれた整数を\nB_i\nとする。\nB_1,B_2,\\ldots,B_N\nをこの順に空白区切りで出力せよ。\n入力例 1\n5 3\r\n1 2 3 4 5\n出力例 1\n3 4 5 1 2\n最初、カードに書かれた整数は山の上から順に\n1,2,3,4,5\nです。\n山の下から\n3\n枚のカードを取り出し、そのまま山の一番上に乗せたあと、カードに書かれた整数は山の上から順に\n3,4,5,1,2\nとなります。\n入力例 2\n6 2\r\n1 2 1 2 1 2\n出力例 2\n1 2 1 2 1 2\nカードに書かれている整数は相異なるとは限りません。\nScore :\n100\npoints\nProblem Statement\nThere is a stack of\nN\ncards, and the\ni\n-th card from the top has an integer\nA_i\nwritten on it.\nYou take\nK\ncards from the bottom of the stack and place them on top of the stack, maintaining their order.\nPrint the integers written on the cards from top to bottom after the operation.\nConstraints\n1 \\leq K < N \\leq 100\n1 \\leq A_i \\leq 100\nAll input values are integers.\nInput\nThe input is given from Standard Input in the following format:\nN\nK\nA_1\nA_2\n\\ldots\nA_N\nOutput\nLet\nB_i\nbe the integer written on the\ni\n-th card from the top of the stack after the operation. Print\nB_1,B_2,\\ldots,B_N\nin this order, separated by spaces.\nSample Input 1\n5 3\r\n1 2 3 4 5\nSample Output 1\n3 4 5 1 2\nInitially, the integers written on the cards are\n1,2,3,4,5\nfrom top to bottom.\nAfter taking three cards from the bottom of the stack and placing them on top, the integers written on the cards become\n3,4,5,1,2\nfrom top to bottom.\nSample Input 2\n6 2\r\n1 2 1 2 1 2\nSample Output 2\n1 2 1 2 1 2\nThe integers written on the cards are not necessarily distinct.",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "LetB_ibe the integer written on thei-th card from the top of the stack after the operation. PrintB_1,B_2,\\ldots,B_Nin this order, separated by spaces.",
      "sample_cases": [
        {
          "input": "5 3\r\n1 2 3 4 5",
          "output": "3 4 5 1 2"
        },
        {
          "input": "6 2\r\n1 2 1 2 1 2",
          "output": "1 2 1 2 1 2"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "You have a stack of cards with numbers on them. You need to take a certain number of cards from the bottom and place them on top of the stack, then show the new order of the cards from top to bottom.",
        "key_concepts": [
          "arrays/lists",
          "slicing",
          "input/output",
          "basic list manipulation"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:13:44.812480"
    },
    {
      "url": "https://atcoder.jp/contests/abc367/tasks/abc367_a",
      "contest": "ABC 367",
      "title": "Shout Everyday",
      "problem_statement": "配点 :\n150\n点\n問題文\nAtCoder 王国の住民は\nA\n時になるとたこ焼きへの愛を叫ぶことになっています。\nAtCoder 王国に住む高橋君は毎日\nB\n時に就寝し\nC\n時に起床します。高橋君は、起きているときはたこ焼きへの愛を叫ぶことができ、寝ているときは叫ぶことができません。高橋君が毎日たこ焼きへの愛を叫ぶことができているか判定してください。ただし、一日は\n24\n時間であり、高橋君が寝ている時間は\n24\n時間未満であるとします。\n制約\n0\\leq A,B,C\\lt 24\nA,B,C\nは相異なる\n入力は全て整数\n入力\n入力は以下の形式で標準入力から与えられる。\nA\nB\nC\n出力\n高橋君が毎日たこ焼きへの愛を叫ぶことができているならば\nYes\nを、そうでないならば\nNo\nを出力せよ。\n入力例 1\n21 8 14\n出力例 1\nYes\n高橋君は毎日\n8\n時に就寝し\n14\n時に起床します。\n21\n時には起きているため、高橋君は毎日たこ焼きへの愛を叫ぶことができます。よって\nYes\nを出力します。\n入力例 2\n0 21 7\n出力例 2\nNo\n高橋君は毎日\n21\n時に就寝し\n7\n時に起床します。\n0\n時には起きていないため、高橋君は毎日たこ焼きへの愛を叫ぶことができません。よって\nNo\nを出力します。\n入力例 3\n10 7 17\n出力例 3\nNo\nScore :\n150\npoints\nProblem Statement\nIn the Kingdom of AtCoder, residents are required to shout their love for takoyaki at\nA\no'clock every day.\nTakahashi, who lives in the Kingdom of AtCoder, goes to bed at\nB\no'clock and wakes up at\nC\no'clock every day (in the\n24\n-hour clock). He can shout his love for takoyaki when he is awake, but cannot when he is asleep. Determine whether he can shout his love for takoyaki every day. Here, a day has\n24\nhours, and his sleeping time is less than\n24\nhours.\nConstraints\n0\\leq A,B,C\\lt 24\nA\n,\nB\n, and\nC\nare pairwise different.\nAll input values are integers.\nInput\nThe input is given from Standard Input in the following format:\nA\nB\nC\nOutput\nPrint\nYes\nif Takahashi can shout his love for takoyaki every day, and\nNo\notherwise.\nSample Input 1\n21 8 14\nSample Output 1\nYes\nTakahashi goes to bed at\n8\no'clock and wakes up at\n14\no'clock every day. He is awake at\n21\no'clock, so he can shout his love for takoyaki every day. Therefore, print\nYes\n.\nSample Input 2\n0 21 7\nSample Output 2\nNo\nTakahashi goes to bed at\n21\no'clock and wakes up at\n7\no'clock every day. He is not awake at\n0\no'clock, so he cannot shout his love for takoyaki every day. Therefore, print\nNo\n.\nSample Input 3\n10 7 17\nSample Output 3\nNo",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "PrintYesif Takahashi can shout his love for takoyaki every day, andNootherwise.",
      "sample_cases": [
        {
          "input": "21 8 14",
          "output": "Yes"
        },
        {
          "input": "0 21 7",
          "output": "No"
        },
        {
          "input": "10 7 17",
          "output": "No"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "Takahashi has to shout his love for takoyaki at a specific time each day. He goes to sleep and wakes up at certain times, and we need to check if he is awake at the time he needs to shout.",
        "key_concepts": [
          "if-statements",
          "basic comparisons",
          "input and output"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:13:48.018186"
    },
    {
      "url": "https://atcoder.jp/contests/abc366/tasks/abc366_a",
      "contest": "ABC 366",
      "title": "Election 2",
      "problem_statement": "配点 :\n100\n点\n問題文\nAtCoder 市では市長選挙が行われています。候補者は高橋氏と青木氏です。\n2\n人のどちらかに投じられた有効票は\nN\n票あり、現在開票が行われています。なお、\nN\nは奇数です。\n現在の開票作業の途中経過は高橋氏に\nT\n票、青木氏に\nA\n票です。\n現時点で勝敗が確定しているかを判定してください。\n制約\n1 \\leq N \\leq 99\nN\nは奇数\n0 \\leq T,A \\leq N\nT+A \\leq N\n入力はすべて整数\n入力\n入力は以下の形式で標準入力から与えられる。\nN\nT\nA\n出力\n現時点で勝敗が確定しているならば\nYes\n、そうでなければ\nNo\nと出力せよ。\n入力例 1\n7 4 2\n出力例 1\nYes\n残りの\n1\n票が青木氏に入っても、高橋氏は勝利します。高橋氏の勝利が確定しているため、\nYes\nと出力します。\n入力例 2\n99 12 48\n出力例 2\nNo\n現時点では青木氏が多く票を獲得していますが、高橋氏が残りの\n39\n票を獲得すると高橋氏が勝利します。よって、\nNo\nと出力します。\n入力例 3\n1 0 0\n出力例 3\nNo\nScore :\n100\npoints\nProblem Statement\nA mayoral election is being held in AtCoder City. The candidates are Takahashi and Aoki.\nThere are\nN\nvalid votes cast for either of the two candidates, and the counting is currently underway. Here,\nN\nis an odd number.\nThe current vote count is\nT\nvotes for Takahashi and\nA\nvotes for Aoki.\nDetermine if the outcome of the election is already decided at this point.\nConstraints\n1 \\leq N \\leq 99\nN\nis an odd number.\n0 \\leq T, A \\leq N\nT + A \\leq N\nAll input values are integers.\nInput\nThe input is given from standard input in the following format:\nN\nT\nA\nOutput\nPrint\nYes\nif the outcome of the election is already decided, and\nNo\notherwise.\nSample Input 1\n7 4 2\nSample Output 1\nYes\nEven if the remaining one vote goes to Aoki, Takahashi will still win. That is, his victory is decided, so print\nYes\n.\nSample Input 2\n99 12 48\nSample Output 2\nNo\nAlthough Aoki currently has more votes, Takahashi would win if he receives the remaining\n39\nvotes. Therefore, print\nNo\n.\nSample Input 3\n1 0 0\nSample Output 3\nNo",
      "constraints": "No constraints specified",
      "input_format": "Input format not specified",
      "output_format": "PrintYesif the outcome of the election is already decided, andNootherwise.",
      "sample_cases": [
        {
          "input": "7 4 2",
          "output": "Yes"
        },
        {
          "input": "99 12 48",
          "output": "No"
        },
        {
          "input": "1 0 0",
          "output": "No"
        }
      ],
      "difficulty": "Beginner",
      "tags": [
        "Basic Implementation",
        "If-Statements",
        "Loops"
      ],
      "simplified": {
        "simplified_explanation": "In a city election, there are two candidates: Takahashi and Aoki. You need to check if it's already clear who will win based on the votes counted so far and the total votes that can still be counted.",
        "key_concepts": [
          "if-statements",
          "basic math",
          "input handling",
          "conditional logic"
        ],
        "estimated_difficulty": 2
      },
      "processed_at": "2025-08-09T14:13:51.986290"
    }
  ]
}